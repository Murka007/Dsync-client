!function(){"use strict";var t,e,n,o,s,i={d:function(t,e){for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}};i.d({},{s:function(){return ft},c:function(){return vt}}),function(t){t[t.DIED=19]="DIED",t[t.KILLUPDATE=22]="KILLUPDATE",t[t.KILLED=28]="KILLED",t[t.SPAWN=35]="SPAWN"}(t||(t={})),function(t){t[t.PRIMARY=0]="PRIMARY",t[t.SECONDARY=1]="SECONDARY",t[t.HEAL=2]="HEAL",t[t.WALL=3]="WALL",t[t.SPIKE=4]="SPIKE",t[t.WINDMILL=5]="WINDMILL",t[t.TREE=6]="TREE",t[t.TRAP=7]="TRAP",t[t.PLATFORM=8]="PLATFORM",t[t.SPAWN=9]="SPAWN",t[t.TURRET=10]="TURRET"}(e||(e={})),function(t){t[t.BUSH=1]="BUSH",t[t.BERSERKER=2]="BERSERKER",t[t.JUNGLE=3]="JUNGLE",t[t.CRYSTAL=4]="CRYSTAL",t[t.SPIKEGEAR=5]="SPIKEGEAR",t[t.IMMUNITY=6]="IMMUNITY",t[t.BOOST=7]="BOOST",t[t.APPLEHAT=8]="APPLEHAT",t[t.SCUBA=9]="SCUBA",t[t.HOOD=10]="HOOD",t[t.DEMOLIST=11]="DEMOLIST"}(n||(n={})),function(t){t[t.STICK=13]="STICK",t[t.HAMMER=15]="HAMMER"}(o||(o={})),function(t){t[t.ATTACKING=0]="ATTACKING",t[t.SHOOTING=1]="SHOOTING",t[t.PLACEABLE=2]="PLACEABLE",t[t.FOOD=3]="FOOD"}(s||(s={}));let a=[];const c=t=>{a=t},r=()=>{a=[]},p={get(t){const e=localStorage.getItem(t);return null===e?null:JSON.parse(e)},set(t,e){localStorage.setItem(t,JSON.stringify(e))},delete(t){localStorage.removeItem(t)}},l=(()=>{const t={primary:"Digit1",secondary:"Digit2",heal:"KeyQ",wall:"Digit4",spike:"KeyV",windmill:"KeyN",trap:"KeyF",turret:"KeyH",tree:"KeyU",platform:"KeyT",spawn:"KeyJ",up:"KeyW",left:"KeyA",down:"KeyS",right:"KeyD",attack:0,autoattack:"KeyE",lockRotation:"KeyX",openChat:"Enter",invisibleHit:2,spikeInsta:"KeyR",toggleMenu:"Escape",fastBreak:"KeyZ",unequip:"...",bush:"...",berserker:"...",jungle:"...",crystal:"...",spikegear:"...",immunity:4,boost:3,applehat:"...",scuba:"...",hood:"...",demolist:"...",placementSpeed:15,autoheal:!0,autohealDelay:85,jungleOnClown:!0,lastHat:!0,autoScuba:!0,enemyTracers:!0,teammateTracers:!0,animalTracers:!0,enemyColor:"#cc5151",teammateColor:"#8ecc51",animalColor:"#518ccc",arrows:!0,rainbow:!1,drawHP:!0,showHoods:!0,itemCounter:!0,skipUpgrades:!0,itemMarkers:!0,teammateMarkers:!0,enemyMarkers:!0,itemMarkersColor:"#8ecc51",teammateMarkersColor:"#cfbc5f",enemyMarkersColor:"#cc5151",markersBottom:!0,autochat:!1,autochatMessages:["Dsync Client","What is it?","The most advanced hack for sploop!","Download on greasyfork!"],kill:!0,killMessage:"{NAME}, you suck! {KILL}x",autospawn:!1,smoothZoom:!0,menuTransparency:!1};return t})(),d=Object.assign(Object.assign({},l),p.get("Dsync-settings"));for(const t in d)l.hasOwnProperty(t)||delete d[t];p.set("Dsync-settings",d);var u=d;const h=(t,e)=>{if(t instanceof HTMLElement)t.classList.remove(e);else for(const n of t)n.classList.remove(e)},m=t=>{if("0"===(t=t.toString()))return"LBTN";if("1"===t)return"MBTN";if("2"===t)return"RBTN";if("3"===t)return"XBTN2";if("4"===t)return"XBTN1";if("Escape"===t)return"ESC";if("BracketLeft"===t)return"[";if("BracketRight"===t)return"]";if("NumpadDivide"===t)return"NUMDIV";if("NumpadMultiply"===t)return"NUMMULT";if("NumpadSubtract"===t)return"NUMSUB";if("NumpadDecimal"===t)return"NUMDEC";if("CapsLock"===t)return"CAPS";if("PrintScreen"===t)return"PRNT";if("Backslash"===t)return"\\";if("Backquote"===t)return"BQUOTE";if("PageDown"===t)return"PAGEDN";const e=/^(?:Numpad|Digit|Arrow|Key)(\w+)$/;e.test(t)&&(t=t.replace(e,"$1").replace(/Numpad/,"NUM"));const n=/^(Control|Shift|Alt)(.).*/;return n.test(t)&&(t=t.replace(n,"$2$1").replace(/Control/,"CTRL")),t.toUpperCase()},g=(t,e)=>t.classList.contains(e),b=t=>{const e=t||document.activeElement;return["TEXTAREA","INPUT"].includes(e.tagName)},y=()=>{const t=document.querySelector("#homepage");return t&&"none"===t.style.display},w=t=>{const e=(t=>({id:t[ft.props.id],type:t.type,x:t[ft.props.x],y:t[ft.props.y],x1:t[ft.props.x1],y1:t[ft.props.y1],x2:t[ft.props.x2],y2:t[ft.props.y2],health:t[ft.props.health],playerValue:t[ft.props.playerValue]}))(t),n=ft.entityData[e.type],o=n[ft.props.radius],s=n[ft.props.maxHealth],i=Math.ceil(e.health/255*s);return Object.assign(Object.assign({},e),{health:i,maxHealth:s,radius:o})},v=t=>{let e=null;const n=(ft.myPlayer||{}).ownerID===t,o=a.includes(t);return u.itemMarkers&&n?e=u.itemMarkersColor:u.teammateMarkers&&o?e=u.teammateMarkersColor:!u.enemyMarkers||n||o||(e=u.enemyMarkersColor),e},f=(t,e)=>{t.strokeStyle="#303030",t.lineWidth=3,t.fillStyle=e,t.beginPath(),t.arc(0,0,9,0,2*Math.PI),t.fill(),t.stroke(),t.closePath()},x=(t,e,n,o)=>Math.sqrt(Math.pow(t-n,2)+Math.pow(e-o,2)),k=(t,e,n)=>{const o=ft.target[ft.props.x],s=ft.target[ft.props.y],{x:i,y:a}=e,c=u.rainbow?`hsl(${ft.hsl}, 100%, 50%)`:((t,e)=>t.id===ft.myPlayerID()||e?u.teammateColor:0!==t.type?u.animalColor:u.enemyColor)(e,n);if(u.arrows){const e=8,n=Math.atan2(a-s,i-o),r=Math.min(100+2*e,x(o,s,i,a)-2*e);((t,e,n,o,s,i)=>{t.save(),t.translate(n,o),t.rotate(Math.PI/4),t.rotate(s),t.globalAlpha=.75,t.strokeStyle=i,t.lineCap="round",t.lineWidth=8,t.beginPath(),t.moveTo(-e,-e),t.lineTo(e,-e),t.lineTo(e,e),t.stroke(),t.closePath(),t.restore()})(t,e,o+r*Math.cos(n),s+r*Math.sin(n),n,c)}else((t,e,n,o,s,i)=>{t.save(),t.globalAlpha=.75,t.strokeStyle=i,t.lineCap="round",t.lineWidth=5,t.beginPath(),t.moveTo(e,n),t.lineTo(o,s),t.stroke(),t.restore()})(t,o,s,i,a,c)},E=(t,e,n)=>{t.save(),t.fillStyle="#fff",t.strokeStyle="#303030",t.lineWidth=8,t.lineJoin="round",t.font="bold 15px Montserrat";const o=n(t.measureText(e).width,parseInt(t.font.match(/\d+/)[0])||1);t.strokeText(e,...o),t.fillText(e,...o),t.restore()},D=t=>new Promise((e=>setTimeout(e,t))),L=t=>{const e={0:t,toString:t=>e[0].toString(t),valueOf:()=>e[0].valueOf(),get length(){return e[0].length}};return e},M=(t,e,n)=>n*(e-t)+t,I=t=>ft.defaultData[ft.props.itemBar][t],S=()=>{const t=I(1);return ft.itemData[t][ft.props.itemType]===e.SECONDARY};var T=function(t,e,n,o){return new(n||(n=Promise))((function(s,i){function a(t){try{r(o.next(t))}catch(t){i(t)}}function c(t){try{r(o.throw(t))}catch(t){i(t)}}function r(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,c)}r((o=o.apply(t,e||[])).next())}))};let C=0,R=!1,A=!1,P=!1,N=!1,O=!1,B=null;const U=new Map;let H=0,$=!1;const K=(t,e=!1,n=!0)=>{const o=(ft.myPlayer||{}).hat||0;if(0===t)t=o;else if(o===t&&!e)return;n&&(ft.actualHat=t),ft.equipHat(t),ft.equipHat(t)},q=t=>{void 0!==t&&(P=t),ft.selectByID(I(Number(P)))},j=()=>ft.attack(ft.getAngle()),z=t=>{ft.selectItem(t),j(),ft.stopAttack(),q(),R&&j()};let W=0;const G=()=>{null!==B&&(z(B),W++,0==(W%=u.placementSpeed)?setTimeout(G):queueMicrotask(G))},Y=(t,e)=>{(t=>ft.defaultData[ft.props.itemBar].some((e=>ft.itemData[e][ft.props.itemType]===t)))(t)&&(U.set(e,t),B=t,1===U.size&&G())},V=()=>{N&&(ft.selectItem(e.HEAL),j(),ft.stopAttack(),q(),R&&j(),setTimeout(V,0))},J=()=>{O&&(q(!P),j(),ft.stopAttack(),q(!P),setTimeout(J,75))};let F=0,X=!1,_=!1,Q=0;const Z=()=>{if(_)return;Q=Date.now();const t=I(0),e=I(1),i=S()&&!(()=>{const t=I(1);return ft.itemData[t][ft.props.itemDataType]===s.SHOOTING})()&&(e===o.HAMMER||t===o.STICK);X=P,_=!0,F=ft.myPlayer.hat,q(i),K(n.DEMOLIST),R=!0,j()},tt=(t,o)=>{if(1===o&&t.preventDefault(),t instanceof KeyboardEvent&&t.repeat)return;if(ft.active)return;if(o!==u.toggleMenu||b(t.target)||ft.toggleMenu(),!y())return;if(o===u.openChat&&(b()||t.preventDefault(),ft.toggleChat()),b(t.target))return;o===u.primary&&q(!1),o===u.secondary&&S()&&q(!0),o===u.heal&&(N=!0,V()),o===u.wall&&Y(e.WALL,o),o===u.spike&&Y(e.SPIKE,o),o===u.windmill&&Y(e.WINDMILL,o),o===u.trap&&Y(e.TRAP,o),o===u.turret&&Y(e.TURRET,o),o===u.tree&&Y(e.TREE,o),o===u.platform&&Y(e.PLATFORM,o),o===u.spawn&&Y(e.SPAWN,o),o===u.unequip&&K(ft.myPlayer.hat,!0),o===u.bush&&K(n.BUSH),o===u.berserker&&K(n.BERSERKER),o===u.jungle&&K(n.JUNGLE),o===u.crystal&&K(n.CRYSTAL),o===u.spikegear&&K(n.SPIKEGEAR),o===u.immunity&&K(n.IMMUNITY),o===u.boost&&K(n.BOOST),o===u.applehat&&K(n.APPLEHAT),o===u.scuba&&K(n.SCUBA),o===u.hood&&K(n.HOOD),o===u.demolist&&K(n.DEMOLIST),o===u.invisibleHit&&S()&&(O=!0,J()),o===u.spikeInsta&&(()=>{const t=P;K(n.BERSERKER),q(!1),z(e.SPIKE),j(),ft.stopAttack(),q(t)})(),o===u.fastBreak&&Z();const s=C;if(o===u.up&&(C|=1),o===u.left&&(C|=4),o===u.down&&(C|=2),o===u.right&&(C|=8),s!==C&&ft.move(C),t instanceof MouseEvent&&o===u.attack){!ft.mousedown(t)&&(R=!0,ft.attack(ft.getAngle()))}o===u.autoattack&&(A=!A,ft.autoattack(A)),o===u.lockRotation&&ft.toggleRotation()},et=(t,e)=>{e===u.heal&&N&&(N=!1),e===u.invisibleHit&&O&&(O=!1),e===u.fastBreak&&T(void 0,void 0,void 0,(function*(){if(!_)return;ft.stopAttack(),R=!1,q(X);const t=Date.now()-Q;t<1300&&(yield D(1300-t)),ft.myPlayer.isClown||K(F),_=!1}));const n=C;if(e===u.up&&(C&=-2),e===u.left&&(C&=-5),e===u.down&&(C&=-3),e===u.right&&(C&=-9),n!==C&&ft.move(C),t instanceof MouseEvent&&e===u.attack&&(ft.mouseup(t),R=!1),null!==B&&U.delete(e)){const t=[...U];B=t.length?t[t.length-1][1]:null}};var nt=function(t,e,n,o){return new(n||(n=Promise))((function(s,i){function a(t){try{r(o.next(t))}catch(t){i(t)}}function c(t){try{r(o.throw(t))}catch(t){i(t)}}function r(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(a,c)}r((o=o.apply(t,e||[])).next())}))};var ot=()=>{const t=document.createElement("iframe"),e=new Blob(['\n        <style>@import"https://fonts.googleapis.com/css2?family=Lato:wght@400;700;900&display=swap";header{background:#2f2f31;color:#76689a;padding:5px 10px;display:flex;justify-content:flex-start;align-items:center}header #version{align-self:flex-end;color:#9787bd;font-size:.5em;font-weight:600;margin-left:10px}header #version svg{fill:#9787bd}header .icon{margin-left:auto;width:35px;height:35px;fill:#cebcb4;transition:fill 100ms;cursor:pointer}header .icon:hover{fill:#ffe7dc}#navbar-container{display:flex;flex-direction:column;padding:10px;margin-right:10px;background:#2f2f31}#navbar-container .open-menu{outline:none;border:none;cursor:pointer;font-weight:900;font-size:1.4rem;padding:10px;background:#313135;color:#ffe7dc;border-right:1px solid;border-right-color:rgba(0,0,0,0);transition:background 100ms,color 100ms,border-right-color 100ms}#navbar-container .open-menu:hover{background:#313135}#navbar-container .open-menu:active{background:#ffe7dc;color:#313135}#navbar-container .open-menu.active{pointer-events:none;background:#313135;border-right-color:#ffe7dc}#navbar-container .bottom-align{margin-bottom:0px;margin-top:auto !important}@-webkit-keyframes appear{from{opacity:0}to{opacity:1}}@-webkit-keyframes disappear{from{opacity:1}to{opacity:0}}@-webkit-keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}@keyframes appear{from{opacity:0}to{opacity:1}}@keyframes disappear{from{opacity:1}to{opacity:0}}@keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}.menu-page{display:none;background:#2f2f31;padding:10px;padding-top:0px}.menu-page.opened{display:block;animation:appear 300ms forwards}.menu-page h1{color:#76689a;font-size:1.5em;font-weight:900}.menu-page h2{color:#9494b8;font-size:1em;font-weight:900}.menu-page p{color:#675a86;font-size:.5em;font-weight:700}.menu-page .content{display:flex;justify-content:space-between;align-items:center;gap:10px}.menu-page .content-double{display:flex;flex-wrap:wrap;justify-content:space-between;gap:10px;width:250px}.menu-page .content-double button{width:48%}.menu-page .content-double:nth-child(3){width:100%}.menu-page #killMessage{width:270px}.menu-page .highlight{font-weight:700;color:#ffe7dc;background:#6a6a81;padding:0 1px}.menu-page .section{background:#36363d;border-radius:5px;margin:20px 0}.menu-page .section:last-child{margin-bottom:0px}.menu-page .section .section-title{display:flex;justify-content:space-between;align-items:center;padding:10px}.menu-page .section .section-title .icon{width:25px;height:25px;margin-right:10px;fill:#cebcb4;transition:fill 100ms,transform 100ms}.menu-page .section .section-title .icon.rotate{transform:rotate(90deg);fill:#ffe7dc}.menu-page .section .section-title:hover .icon{fill:#ffe7dc}.menu-page .section:not(.opened) .section-title{cursor:pointer}.menu-page .section:not(.opened) .section-content{overflow:hidden}.menu-page .section .section-content{padding:10px;padding-top:0px;display:grid;grid-template-columns:1fr 1fr;transition:max-height 250ms cubic-bezier(0, 1, 0, 1);max-height:0px}.menu-page .section .section-content.one-row{grid-template-columns:1fr}.menu-page .section .section-content.opened{transition:max-height 250ms ease-out;max-height:100%}.menu-page .section .section-content .split{grid-column:1/3;margin-top:10px;background:#40404a;height:2px}.menu-page .section .section-content .section-option{display:flex;justify-content:space-between;align-items:center;margin-top:10px}.menu-page .section .section-content .section-option .section-option-title{color:#6a6a81;font-size:.8em}.menu-page .section .section-content .section-option .section-option-hotkeyInput{margin-right:50px;cursor:pointer;font-weight:900;font-size:.6em;padding-bottom:8px;outline:none;border:none;text-align:center;width:80px;height:35px;border-radius:7.5px;background:#7d7d9b;color:#adbcd8;box-shadow:0px -6px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .section-option-hotkeyInput.red{background:#9e5454;color:#d8adad;box-shadow:0px -6px 0px 0px #783d3d inset}.menu-page .section .section-content .section-option .switch-checkbox{position:relative;margin-right:25px;width:70px;height:25px}.menu-page .section .section-content .section-option .switch-checkbox input{width:0;height:0;opacity:0}.menu-page .section .section-content .section-option .switch-checkbox input:checked+span{background:#7d7d9b;box-shadow:0px 5px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .switch-checkbox input:checked+span:before{background:#ffe7dc;transform:translateX(42px)}.menu-page .section .section-content .section-option .switch-checkbox span{position:absolute;cursor:pointer;top:0;left:0;bottom:0;right:0;width:100%;height:100%;display:flex;align-items:center;background:#5f5f79;box-shadow:0px 5px 0px 0px #4d4d5f inset;border-radius:10px;transition:all 100ms ease-in-out}.menu-page .section .section-content .section-option .switch-checkbox span:before{position:absolute;content:"";width:28px;height:28px;border-radius:50%;background:#f0dcd3;box-shadow:0px -5px 0px 0px #cebcb4 inset;border:2px solid #adbcd8;transition:all 100ms ease-in-out}.menu-page .section .section-content .section-option .slider{position:relative;margin-right:45px}.menu-page .section .section-content .section-option .slider input{-webkit-appearance:none;outline:none;cursor:pointer;width:154px;height:20.8333333333px;border-radius:10px;background:#7d7d9b;box-shadow:0px 5px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .slider input::-webkit-slider-thumb{-webkit-appearance:none;width:28px;height:28px;border-radius:50%;background:#ffe7dc;box-shadow:0px -5px 0px 0px #cebcb4 inset;border:2px solid #adbcd8}.menu-page .section .section-content .section-option .slider .slider-value{position:absolute;margin-left:5px;color:#6a6a81;font-size:.65em}.menu-page .section .section-content .section-option .input{outline:none;border:none;font-weight:900;text-align:center;width:130px;height:35px;padding-bottom:6px;border-radius:7.5px;background:#7d7d9b;color:#adbcd8;box-shadow:0px -6px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .input:focus{border:3px solid #f0dcd3}.menu-page .section .section-content .section-option .button{outline:none;border:none;font-weight:900;cursor:pointer;height:40px;padding-bottom:6px;border-radius:7.5px;background:#7d7d9b;color:#adbcd8;box-shadow:0px -6px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .button:active{padding-bottom:0px;padding-top:3px;box-shadow:0px 3px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .button.red{background:#9e5454;color:#d8adad;box-shadow:0px -6px 0px 0px #783d3d inset}.menu-page .section .section-content .section-option .button.red:active{box-shadow:0px 3px 0px 0px #783d3d inset}.menu-page .section .section-content .section-option .form-upload{position:relative;font-size:.55em;font-weight:400;letter-spacing:1.5px;text-align:center;width:100%;border-radius:5px;border:2px dashed;border-color:rgba(173,188,216,.5411764706);padding:15px 10px;transition:border-color 100ms}.menu-page .section .section-content .section-option .form-upload:hover{border-color:#adbcd8}.menu-page .section .section-content .section-option .form-upload.red{border-color:#9e5454;animation:failedTransition 400ms}.menu-page .section .section-content .section-option .form-upload.red .light{color:#d8adad}.menu-page .section .section-content .section-option .form-upload.green{border-color:#77c468}.menu-page .section .section-content .section-option .form-upload.green .light{color:#a1dda1}.menu-page .section .section-content .section-option .form-upload input{position:absolute;opacity:0;top:0;left:0;bottom:0;right:0;width:100%;height:100%;cursor:pointer}.menu-page .section .section-content .section-option .form-upload .light{color:#adbcd8}.menu-page .section .section-content .section-option .form-upload .light-extra{color:#f0dcd3}.menu-page .section .section-content .section-option .tooltip{position:relative;margin-left:5px;color:#8181a0}.menu-page .section .section-content .section-option .tooltip:hover{cursor:pointer}.menu-page .section .section-content .section-option .tooltip:hover .tooltip-text{visibility:visible}.menu-page .section .section-content .section-option .tooltip .tooltip-text{position:absolute;visibility:hidden;text-align:center;overflow:visible;bottom:calc(100% - 5px);left:50%;transform:translateX(-50%);background-color:#7d7d9b;color:#ffe7dc;width:225px;font-size:13px;font-weight:600;padding:5px;border-radius:5px;border:3px solid #5f5f79}.menu-page .section .section-content .section-option .tooltip .tooltip-text.left{text-align:left}@-webkit-keyframes appear{from{opacity:0}to{opacity:1}}@-webkit-keyframes disappear{from{opacity:1}to{opacity:0}}@-webkit-keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}@keyframes appear{from{opacity:0}to{opacity:1}}@keyframes disappear{from{opacity:1}to{opacity:0}}@keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}@-webkit-keyframes appear{from{opacity:0}to{opacity:1}}@-webkit-keyframes disappear{from{opacity:1}to{opacity:0}}@-webkit-keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}@keyframes appear{from{opacity:0}to{opacity:1}}@keyframes disappear{from{opacity:1}to{opacity:0}}@keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}html,body{margin:0;padding:0;background:rgba(0,0,0,0) !important;scrollbar-width:10px;scrollbar-track-color:#36363d;scrollbar-face-color:#494955}*{font-family:"Lato",sans-serif}h1,h2,h3,h4,p{margin:0}#menu-container{font-weight:900;font-size:2rem;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:1024px;height:700px;display:flex;justify-content:center;align-items:center;user-select:none}#menu-container.open{animation:appear 100ms forwards}#menu-container.close{animation:disappear 100ms forwards}#menu-container.transparent #menu-wrapper{background:rgba(43,43,44,.4666666667)}#menu-container.transparent #navbar-container{background:rgba(47,47,49,.6431372549)}#menu-container.transparent .menu-page{background:rgba(47,47,49,.6431372549)}#menu-container.transparent .section{background:rgba(54,54,61,.6509803922)}#menu-wrapper{display:flex;flex-direction:column;width:100%;height:80%;background:#2b2b2c;border-radius:5px;padding:10px}main{display:flex;justify-content:space-between;margin-top:10px;height:100%}main #menu-page-container{width:100%;height:500px;overflow-y:scroll}.default-color{outline:none;border:none;width:10px;height:10px;border-radius:100%;cursor:pointer}input[id][type=color]{outline:none;border:none;padding:0 1px;margin:0;height:24px;background-color:#7d7d9b;border-radius:5px;cursor:pointer}::-webkit-scrollbar{width:10px}::-webkit-scrollbar-track{background:#36363d;border-radius:10px}::-webkit-scrollbar-thumb{background:#494955;border-radius:10px}</style>\n        <div id="menu-container" class="open">\n            <div id="menu-wrapper">\n                <header> <span>Dsync Client</span> <div id="version"> <svg width="15" height="15" viewBox="0 0 16 16" version="1.1"> <path d="M11.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122V6A2.5 2.5 0 0110 8.5H6a1 1 0 00-1 1v1.128a2.251 2.251 0 11-1.5 0V5.372a2.25 2.25 0 111.5 0v1.836A2.492 2.492 0 016 7h4a1 1 0 001-1v-.628A2.25 2.25 0 019.5 3.25zM4.25 12a.75.75 0 100 1.5.75.75 0 000-1.5zM3.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0z"></path> </svg> <span></span> </div> <svg id="close-menu" class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="30px" height="30px"> <path d="M 7 4 C 6.744125 4 6.4879687 4.0974687 6.2929688 4.2929688 L 4.2929688 6.2929688 C 3.9019687 6.6839688 3.9019687 7.3170313 4.2929688 7.7070312 L 11.585938 15 L 4.2929688 22.292969 C 3.9019687 22.683969 3.9019687 23.317031 4.2929688 23.707031 L 6.2929688 25.707031 C 6.6839688 26.098031 7.3170313 26.098031 7.7070312 25.707031 L 15 18.414062 L 22.292969 25.707031 C 22.682969 26.098031 23.317031 26.098031 23.707031 25.707031 L 25.707031 23.707031 C 26.098031 23.316031 26.098031 22.682969 25.707031 22.292969 L 18.414062 15 L 25.707031 7.7070312 C 26.098031 7.3170312 26.098031 6.6829688 25.707031 6.2929688 L 23.707031 4.2929688 C 23.316031 3.9019687 22.682969 3.9019687 22.292969 4.2929688 L 15 11.585938 L 7.7070312 4.2929688 C 7.5115312 4.0974687 7.255875 4 7 4 z"/> </svg> </header>\n\n                <main>\n                    <aside id="navbar-container"> <button class="open-menu active">Keybinds</button> <button class="open-menu">Combat</button> <button class="open-menu">Visuals</button> <button class="open-menu">Misc</button> <button class="open-menu bottom-align">Credits</button> </aside>\n\n                    <div id="menu-page-container">\n                        <div class="menu-page opened"> <h1>Keybinds</h1> <p>Setup keybinds for items, weapons and hats</p> <div class="section"> <div class="section-title"> <h2>Items & Weapons</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Primary</span> <button id="primary" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Secondary</span> <button id="secondary" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Heal</span> <button id="heal" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Wall</span> <button id="wall" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Spike</span> <button id="spike" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Windmill</span> <button id="windmill" class="section-option-hotkeyInput"></button> </div> </div> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Trap/Boost</span> <button id="trap" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Turret</span> <button id="turret" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Tree/Stone</span> <button id="tree" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Platform</span> <button id="platform" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Cosy bed</span> <button id="spawn" class="section-option-hotkeyInput"></button> </div> </div> </div> </div> <div class="section"> <div class="section-title"> <h2>Controls & Movement</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Up</span> <button id="up" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Left</span> <button id="left" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Down</span> <button id="down" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Right</span> <button id="right" class="section-option-hotkeyInput"></button> </div> <div class="split"></div> <div class="section-option"> <span class="section-option-title">Attack</span> <button id="attack" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Auto attack</span> <button id="autoattack" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Lock rotation</span> <button id="lockRotation" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Open chat</span> <button id="openChat" class="section-option-hotkeyInput"></button> </div> <div class="split"></div> <div class="section-option"> <span class="section-option-title">Invisible hit</span> <button id="invisibleHit" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Spike insta</span> <button id="spikeInsta" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Toggle Dsync Menu</span> <button id="toggleMenu" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title"> Fast break <span class="tooltip"> * <span class="tooltip-text">When you press a key, it equips a demolist and starts attacking</span> </span> </span> <button id="fastBreak" class="section-option-hotkeyInput"></button> </div> </div> </div> <div class="section"> <div class="section-title"> <h2>Hats</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Unequip hat</span> <button id="unequip" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Bush hat</span> <button id="bush" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Berserker</span> <button id="berserker" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Jungle gear</span> <button id="jungle" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Crystal gear</span> <button id="crystal" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Spike gear</span> <button id="spikegear" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Immunity gear</span> <button id="immunity" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Boost hat</span> <button id="boost" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Apple hat</span> <button id="applehat" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Scuba gear</span> <button id="scuba" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Hood</span> <button id="hood" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Demolist</span> <button id="demolist" class="section-option-hotkeyInput"></button> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Combat</h1> <p>Modify combat settings, change pvp behavior</p> <div class="section opened"> <div class="section-title"> <h2>Placement</h2> </div> <div class="section-content one-row"> <div class="section-option"> <span class="section-option-title"> Placement speed <span class="tooltip"> * <span class="tooltip-text">The higher value, the faster you place</span> </span> </span> <label class="slider"> <input id="placementSpeed" min="1" max="100" type="range"> <span class="slider-value">100</span> </label> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Healing</h2> </div> <div class="section-content"> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Autoheal</span> <label class="switch-checkbox"> <input id="autoheal" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Healing delay</span> <label class="slider"> <input id="autohealDelay" min="0" max="150" type="range"> <span class="slider-value">150</span> </label> </div> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Hats</h2> </div> <div class="section-content"> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Jungle On Clown</span> <label class="switch-checkbox"> <input id="jungleOnClown" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title"> Equip last hat <span class="tooltip"> * <span class="tooltip-text">On spawn, the last hat you had will be equipped</span> </span> </span> <label class="switch-checkbox"> <input id="lastHat" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Auto scuba</span> <label class="switch-checkbox"> <input id="autoScuba" type="checkbox"> <span></span> </label> </div> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Visuals</h1> <p>Customize your visuals, or you can disable it for performance</p> <div class="section opened"> <div class="section-title"> <h2>Tracers</h2> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Enemies</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="enemyColor" type="color"> <label class="switch-checkbox"> <input id="enemyTracers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title">Arrows</span> <label class="switch-checkbox"> <input id="arrows" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Teammates</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="teammateColor" type="color"> <label class="switch-checkbox"> <input id="teammateTracers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title">Rainbow colors</span> <label class="switch-checkbox"> <input id="rainbow" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Animals</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="animalColor" type="color"> <label class="switch-checkbox"> <input id="animalTracers" type="checkbox"> <span></span> </label> </div> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Player</h2> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Show invisible players</span> <label class="switch-checkbox"> <input id="showHoods" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Draw HP value</span> <label class="switch-checkbox"> <input id="drawHP" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Item counter</span> <label class="switch-checkbox"> <input id="itemCounter" type="checkbox"> <span></span> </label> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Markers</h2> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Your markers</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="itemMarkersColor" type="color"> <label class="switch-checkbox"> <input id="itemMarkers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title">Teammates</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="teammateMarkersColor" type="color"> <label class="switch-checkbox"> <input id="teammateMarkers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title">Enemies</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="enemyMarkersColor" type="color"> <label class="switch-checkbox"> <input id="enemyMarkers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title"> Markers at bottom <span class="tooltip"> * <span class="tooltip-text">Faster, but you won\'t be able to see markers if you\'re trapped or on platform</span> </span> </span> <label class="switch-checkbox"> <input id="markersBottom" type="checkbox"> <span></span> </label> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Misc</h1> <p>Customize misc settings, add autochat messages, reset settings</p> <div class="section opened"> <div class="section-title"> <h2>Chat</h2> </div> <div class="section-content one-row"> <div class="section-option"> <span class="section-option-title">Autochat</span> <div class="content"> <input class="input autochat" type="text" maxlength="35"> <input class="input autochat" type="text" maxlength="35"> <input class="input autochat" type="text" maxlength="35"> <input class="input autochat" type="text" maxlength="35"> <label class="switch-checkbox"> <input id="autochat" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title"> Message on kill <span class="tooltip"> * <span class="tooltip-text left"> <div>Variables:</div> <div><span class="highlight">{KILL}</span> - amount of kills</div> <div><span class="highlight">{NAME}</span> - name of the player you killed</div> </span> </span> </span> <div class="content"> <input id="killMessage" class="input" type="text" maxlength="35"> <label class="switch-checkbox"> <input id="kill" type="checkbox"> <span></span> </label> </div> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Other</h2> </div> <div class="section-content one-row"> <div class="section-option"> <span class="section-option-title">Autospawn</span> <label class="switch-checkbox"> <input id="autospawn" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title"> Smooth zoom <span class="tooltip"> * <span class="tooltip-text">Disable for performance</span> </span> </span> <label class="switch-checkbox"> <input id="smoothZoom" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title"> Skip upgrades <span class="tooltip"> * <span class="tooltip-text">When you have only 1 item in the upgradebar, it will automatically select it</span> </span> </span> <label class="switch-checkbox"> <input id="skipUpgrades" type="checkbox"> <span></span> </label> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Menu</h2> </div> <div class="section-content one-row"> <div class="section-option"> <span class="section-option-title">Menu transparency</span> <label class="switch-checkbox"> <input id="menuTransparency" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <div class="content-double"> <button id="reset-settings" class="button red">Reset settings</button> <button id="download-settings" class="button">Download settings</button> <div class="form-upload"> <input id="upload-settings" type="file" accept=".txt"> <span class="light">DRAG SETTINGS FILE HERE OR <span class="light-extra">BROWSE</span></span> </div> </div> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Credits</h1> </div>\n                    </div>\n                </main>\n            </div>\n        </div>\n    '],{type:"text/html; charset=utf-8"});t.src=URL.createObjectURL(e),t.id="iframe-page-container",document.body.appendChild(t);const n=document.createElement("style");n.innerHTML="\n        #iframe-page-container {\n            position: absolute;\n            top: 0;\n            left: 0;\n            bottom: 0;\n            right: 0;\n            width: 100%;\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            z-index: 99;\n            border: none;\n            outline: none;\n            overflow: scroll;\n            display: none;\n        }\n\n        .iframe-opened {\n            display: block!important;\n        }\n    ",document.head.appendChild(n),t.onload=()=>{const e=t.contentWindow,n=e.document;URL.revokeObjectURL(t.src);const o=n.getElementById("menu-container"),s=n.querySelectorAll(".open-menu"),i=n.querySelectorAll(".menu-page"),a=n.querySelectorAll(".section"),c=n.querySelectorAll(".section-option-hotkeyInput[id]"),r=n.querySelector("#close-menu"),d=n.querySelectorAll("input[type='checkbox'][id]"),b=n.querySelectorAll("input[type='range'][id]"),y=n.querySelector("#version > span"),w=n.querySelectorAll(".input.autochat"),v=n.querySelector("#killMessage"),f=n.querySelector("#reset-settings"),x=n.querySelector("#download-settings"),k=n.querySelector("#upload-settings"),E=n.querySelector("#menuTransparency"),D=n.querySelectorAll("input[type='color'][id]"),L=()=>{for(const t of D){const e=t.previousElementSibling;if(e){const n=l[t.id];e.style.backgroundColor=n,e.onclick=()=>{t.value=n,u[t.id]=n,p.set("Dsync-settings",u)}}t.value=u[t.id],t.onchange=()=>{u[t.id]=t.value,p.set("Dsync-settings",u),t.blur()}}o.classList[u.menuTransparency?"add":"remove"]("transparent"),v.value=u.killMessage,v.onchange=()=>{u.killMessage=v.value,p.set("Dsync-settings",u),v.blur()};for(let t=0;t<w.length;t++){const e=w[t];e.value=u.autochatMessages[t]||"",e.onchange=()=>{u.autochatMessages[t]=e.value,p.set("Dsync-settings",u),e.blur()}}y.textContent="v"+ft.version;for(const t of b){const e=t.nextElementSibling;t.value=u[t.id],e&&(e.textContent=t.value),t.oninput=()=>{const n=Number(t.value)%5;t.value-=n,e&&(e.textContent=t.value),u[t.id]=Number(t.value),p.set("Dsync-settings",u)}}for(const t of d)t.checked=u[t.id],t.onchange=()=>{u[t.id]=t.checked,p.set("Dsync-settings",u),t.blur()};ft.toggleMenu=()=>{o.classList.toggle("close"),o.classList.toggle("open"),setTimeout((()=>{t.classList.toggle("iframe-opened")}),100)},r.onclick=ft.toggleMenu;for(let t=0;t<s.length;t++)s[t].onclick=()=>{h(s,"active"),s[t].classList.add("active"),h(i,"opened"),i[t].classList.add("opened")};for(const t of a){const e=t.children[0],n=t.children[1];e&&n&&(g(t,"opened")?n.classList.add("opened"):(n.style.display="none",e.onclick=()=>{n.classList.contains("opened")?setTimeout((()=>{n.style.display="none"}),100):n.style.display="grid",setTimeout((()=>{n.classList.toggle("opened"),e.children[1].classList.toggle("rotate")}),0)}))}for(const t of c)try{t.textContent=m(u[t.id])}catch(e){throw new Error(t.id+" doesn't exist in settings")}M()};E.addEventListener("change",(()=>{o.classList[E.checked?"add":"remove"]("transparent")})),f.onclick=()=>{Object.assign(u,l),p.set("Dsync-settings",u),L()},x.onclick=()=>{((t,e)=>{const n=new Blob([JSON.stringify(t,null,4)],{type:"application/json "}),o=URL.createObjectURL(n),s=document.createElement("a");s.href=o,s.download=(e||"settings")+".txt",s.click(),s.remove(),URL.revokeObjectURL(o)})(u,"DsyncSettings"+ft.version)},k.onchange=t=>nt(void 0,void 0,void 0,(function*(){const e=t.target,n=k.parentElement,o=n.children[1];n.classList.remove("red"),n.classList.remove("green");try{const t=yield e.files[0].text(),s=JSON.parse(t);if(!Object.keys(s).every((t=>l.hasOwnProperty(t))))throw new Error("Invalid settings");Object.assign(u,s),p.set("Dsync-settings",u),L(),n.classList.add("green"),o.innerHTML="SETTINGS LOADED SUCCESSFULLY"}catch(t){n.classList.add("red"),o.innerHTML="SETTINGS ARE NOT VALID, TRY ANOTHER"}}));const M=()=>{const t=new Map;for(const e of c){const n=u[e.id],[o,s]=t.get(n)||[0,[]];t.set(n,[(o||0)+1,[...s,e]]),e.classList.remove("red")}for(const e of t){const[t,n]=e[1];if(1!==t)for(const t of n)t.classList.add("red")}};ft.active=null;const I=t=>{if(!ft.active)return;const e="Backspace"===t?"...":m(t);u[ft.active.id]="Backspace"===t?"...":t,ft.active.textContent=e,p.set("Dsync-settings",u),ft.active=null,M()};o.addEventListener("keyup",(t=>{t.keyCode<5||!ft.active||I(t.code)})),o.addEventListener("mouseup",(t=>{const e=t.target;if(ft.active)return I(t.button);g(e,"section-option-hotkeyInput")&&(e.textContent="Wait...",ft.active=e)})),e.addEventListener("keydown",(t=>tt(t,t.code))),e.addEventListener("keyup",(t=>et(t,t.code)));const S=()=>{const t=window.innerWidth,e=window.innerHeight,n=Math.min(1,Math.min(t/1024,e/700));o.style.transform=`translate(-50%, -50%) scale(${n})`};S(),window.addEventListener("resize",S),setTimeout((()=>t.classList.add("iframe-opened")),0),e.addEventListener("contextmenu",(t=>t.preventDefault())),e.addEventListener("mousedown",(t=>1===t.button&&t.preventDefault())),e.addEventListener("mouseup",(t=>[3,4].includes(t.button)&&t.preventDefault())),window.addEventListener("mouseup",(t=>[3,4].includes(t.button)&&t.preventDefault())),L()}};const st=[{radix:2,prefix:"0b0*"},{radix:8,prefix:"0+"},{radix:10,prefix:""},{radix:16,prefix:"0x0*"}];var it;!function(t){t[t.APPEND=0]="APPEND",t[t.PREPEND=1]="PREPEND"}(it||(it={}));var at=class{constructor(t,e){this.code=t,this.COPY_CODE=t,this.unicode=e||!1,this.hooks={}}static parseValue(t){try{return Function(`return (${t})`)()}catch(t){return null}}isRegexp(t){return"regexp"===(t=>Object.prototype.toString.call(t).slice(8,-1).toLowerCase())(t)}generateNumberSystem(t){return`(?:${[...st].map((({prefix:e,radix:n})=>e+t.toString(n))).join("|")})`}parseVariables(t){return t=(t=(t=t.replace(/\{VAR\}/g,"(?:let|var|const)")).replace(/\{QUOTE\}/g,"['\"`]")).replace(/ARGS\{(\d+)\}/g,((...t)=>{let e=Number(t[1]),n=[];for(;e--;)n.push("\\w+");return n.join("\\s*,\\s*")})),t=t.replace(/NUMBER\{(\d+)\}/g,((...t)=>{const e=Number(t[1]);return this.generateNumberSystem(e)}))}format(t,e,n){let o=null;Array.isArray(e)?o=e.map((t=>this.isRegexp(t)?t.source:t)).join("\\s*"):this.isRegexp(e)&&(o=e.source),o=this.parseVariables(o),this.unicode&&(o=o.replace(/\\w/g,"(?:[^\\x00-\\x7F-]|\\$|\\w)"));const s=new RegExp(o.replace(/\{INSERT\}/,""),n);if(null===this.code.match(s))throw new Error("Failed to find: "+t);return o.includes("{INSERT}")?new RegExp(o,n):s}template(t,e,n,o){const s=new RegExp(`(${this.format(e,n).source})`);this.code=this.code.replace(s,t===it.APPEND?"$1"+o:o+"$1")}match(t,e,n,o=!1){const s=this.format(t,e,n),i=this.code.match(s);return this.hooks[t]={expression:s,match:i},o&&vt(t,this.hooks[t]),i}matchAll(t,e,n,o=!1){const s=this.format(t,e,n),i=this.code.matchAll(s);return this.hooks[t]={expression:s,match:[...i]},o&&vt(t,this.hooks[t]),i}replace(t,e,n,o){const s=this.format(t,e,o);this.code=this.code.replace(s,n)}append(t,e,n){this.template(it.APPEND,t,e,n)}prepend(t,e,n){this.template(it.PREPEND,t,e,n)}insert(t,e,n){const{source:o}=this.format(t,e);if(!o.includes("{INSERT}"))throw new Error("Your regexp must contain {INSERT} keyword");const s=new RegExp(o.replace(/^(.*)\{INSERT\}(.*)$/,"($1)($2)"));this.code=this.code.replace(s,`$1${n}$2`)}};let ct=0;var rt=e=>{const[n]=e;if(n===t.SPAWN&&u.lastHat&&K(ft.actualHat,!0),n===t.DIED&&(C=0,R=!1,A=!1,P=!1,ct=0,u.autospawn&&T(void 0,void 0,void 0,(function*(){yield D(100);const t=document.querySelector("#play");t&&t.click()}))),n===t.KILLUPDATE&&(ct=e[1][0]),u.kill&&n===t.KILLED){const t=u.killMessage.length?u.killMessage:"{KILL}x",n=e[1].replace(/^Killed\s/,"").trim(),o=t.replace(/\{KILL\}/g,ct+"").replace(/\{NAME\}/g,n);ft.chat(o)}};var pt=(t,e,n)=>{if(!u.itemCounter)return;const o=I(n),s=ft.itemData[o][ft.props.itemType],i=ft.defaultData[ft.props.currentCount][s],a=ft.maxCount[s];if(0===a)return;const c=e[ft.props.x]-10,r=e[ft.props.y]+7,p=e.width;E(t,`${i}/${a}`,((t,e)=>[c+p-t,r+e]))};var lt=(t,e,n)=>{const o=w(t),s=ft.myPlayerID();s===o.id&&u.rainbow&&(ft.hsl=(ft.hsl+.8)%360),((t,e)=>{if(!u.drawHP)return;const{x:n,y:o,health:s,maxHealth:i,radius:a}=e;E(t,`HP ${s}/${i}`,((t,e)=>[n-t/2,o+a+e+55]))})(e,o),s!==o.id&&null!==ft.myPlayer&&(u.enemyTracers&&0===o.type&&!n||u.teammateTracers&&0===o.type&&n||u.animalTracers&&0!==o.type)&&k(e,o,n)};var dt=()=>{let t=!0,e=0;const n=()=>{const{w:e,h:o,w2:s,h2:i}=ft.scale,a=Math.abs(e[0]-s),c=Math.abs(o[0]-i);a<3||c<3?t=!0:(e[0]=M(e[0],s,.175),o[0]=M(o[0],i,.175),window.dispatchEvent(new Event("resize")),setTimeout(n,0))};window.addEventListener("wheel",(o=>{if(!(o.target instanceof HTMLCanvasElement)||o.ctrlKey||o.shiftKey||o.altKey||b()||!y())return;const s=ft.scale,{w:i,h:a,w2:c,h2:r}=s;if(1824===c&&1026===r&&0!=(e=(e+1)%5))return;const p=o.deltaY>0?-150:150;s.w2=Math.max(924,c+p),s.h2=Math.max(126,r+p),u.smoothZoom?t&&(t=!1,n()):(i[0]=s.w2,a[0]=s.h2,window.dispatchEvent(new Event("resize")))}))};var ut=(t,e,n,o)=>{const s=t[ft.props.itemOwner];if(0===s)return;const i=v(s);null!==i&&f(n,i)};let ht=!1,mt=!1,gt=!1,bt=100;var yt=t=>{if(ft.myPlayerID()!==t[ft.props.id])return;const o=w(t);if(ft.myPlayer=Object.assign(Object.assign({},ft.myPlayer),o),ft.myPlayer.hat=t[ft.props.hat],ft.myPlayer.isClown=128===o.playerValue,ft.myPlayer.ownerID=t[ft.props.itemOwner],u.skipUpgrades){const t=ft.defaultData[ft.props.upgradeBar];1===t.length&&ft.upgradeItem(t[0])}const{x2:s,y2:i,health:a,maxHealth:c,isClown:r,hat:p,oldHat:l}=ft.myPlayer,d=i>8075&&i<8925,h=!(i>8e3&&i<9e3);u.autoScuba&&d&&!gt&&(gt=!0,ft.myPlayer.oldHat=p,K(n.SCUBA,!1,!1)),gt&&h&&(K(l),gt=!1);const m=ft.entityList()[39],g=!!m.length&&m.some((t=>{const e=ft.entityData[39][ft.props.radius],n=ft.entityData[0][ft.props.radius],o=t[ft.props.x2],a=t[ft.props.y2];return x(s,i,o,a)<e+n})),v=Math.abs(a-bt),f=ft.defaultData[ft.props.itemBar].includes(12)?35:20;if(u.autoheal&&a<c-(g?f-5:10)&&!r&&!ht&&(v>2||0===v)){bt=a,ht=!0;const t=Math.max(1,Math.ceil((c-a)/f));setTimeout((()=>{for(let n=0;n<=t;n++)z(e.HEAL);ht=!1}),u.autohealDelay)}u.jungleOnClown&&r&&p!==n.JUNGLE&&!mt&&(mt=!0,ft.myPlayer.oldHat=_?F:p,K(n.JUNGLE,!1,!1)),!r&&mt&&(K(l),mt=!1),u.autochat&&T(void 0,void 0,void 0,(function*(){if($||b()||!y())return;$=!0;const t=u.autochatMessages.filter((t=>t.length));t.length&&(ft.chat(t[H++]),H%=t.length,yield D(2e3),$=!1)}))};var wt=(t,e)=>{const n=ft.entityList();for(let e=0;e<ft.itemList.length;e++){const o=ft.itemList[e];for(let e=0;e<n[o].length;e++){const s=n[o][e],i=s[ft.props.itemOwner];if(0===i)continue;const a=v(i);if(null===a)continue;const c=s[ft.props.x],r=s[ft.props.y];t.save(),t.translate(c+s.dirX,r+s.dirY),f(t,a),t.restore()}}};const vt=console.log;window.log=vt,window.Dsync={props:{},hooks:{},settings:u,myPlayer:null,target:null,hsl:0,version:"1.0.5",actualHat:0,scale:{w:L(1824),h:L(1026),w2:1824,h2:1026},itemList:[]};const ft=window.Dsync;p.delete("_adIds"),window.eval=new Proxy(window.eval,{apply(t,e,n){const o=n[0];if(o.length>1e5&&!(()=>{try{return!/DEV/.test(GM_info.script.name)}catch(t){return!1}})()){const s=new at(o,!0),i=(t,e,n="")=>{s.prepend(t,["function",e],`Dsync.${t}=${e};`+n)};window.COPY_CODE=s.COPY_CODE.match(/^\((.+)\)\(.+\);$/)[1],s.append("EXTERNAL fix",[/\(function/,/(\w+)/,/\(/,/\w+/,/\)/,/\{/],"EXTERNAL.__proto__.toString=()=>COPY_CODE;"),s.replace("Debugger fix",[/debugger/],"","g");i("selectItem",s.match("selectItem",[/!/,/\w+/,/\[/,/\w+/,/\]/,/&&/,/(\w+)/,/\(/,/\d/,/\)/,/,/])[1]);i("equipHat",s.match("equipHat",[/!/,/\w+/,/\)/,/return/,/;/,/(\w+)/,/\(/,/\w+/,/\)/])[1]);i("chat",s.match("chat",[/break/,/\}/,/(\w+)/,/\(/,/\w+/,/\)/])[1]);const[,a,c]=s.match("attack",[/&&/,/(\w+)/,/\(/,/(\w+)/,/\(/,/\)/,/\)/,/,/]);i("attack",a),i("getAngle",c);i("stopAttack",s.match("stopAttack",[/&&/,/(\w+)/,/\(/,/\)/,/,/])[1]);i("autoattack",s.match("autoattack",[/,/,/(\w+)/,/\(/,/\w+/,/\)/,/\)/,/\)/])[1]);i("move",s.match("move",[/&&/,/\(/,/(\w+)/,/\(/,/\w+/,/\)/])[1]);i("createClan",s.match("createClan",[/,/,/\w+/,/=>/,/\{/,/(\w+)/,/\(/,/\w+/])[1]);i("leaveClan",s.match("leaveClan",[/=>/,/\{/,/(\w+)/,/\(/,/\)/,/\}/])[1]);i("kickUser",s.match("kickUser",[/return/,/;/,/(\w+)/,/\(/,/\w+/,/\)/,/\}/,/:/])[1]);i("joinClan",s.match("joinClan",[/(\w+)/,/\(/,/\w+/,/\)/,/\}/,/\}/,/\)/,/\}/,/\}/])[1]),s.append("mousedown",[/&&/,/\w+/,/\>/,/\w+/,/\)/,/return/,/;/,"(.+?=",/(\w+)/,".+?),","!(\\w+",/\(/,/\w+/,/,/,/\w+/,"\\)).+?",/\}/],"Dsync.mousedown=($3)=>{$2;return $4;};"),s.append("mouseup",[/!\w+\.\w+/,/\)/,/return/,/;/,"(\\w+",/=/,/(\w+).+?\w+/,/\(/,/\w+/,/,/,/\w+/,"\\))",/\}/],"Dsync.mouseup=($3)=>{$2};");const[,r,p]=s.match("lockRotation",[/\[/,/\w+/,/\]/,/&&/,/(\w+)/,/\(/,/!(\w+)/,/\)/,/,/]);s.prepend("lockRotation",["function",`${r}`],`Dsync.toggleRotation=()=>{${p}=!${p};};`);const l=s.match("toggleChat",[/return/,"(\\w+",/&&/,/\w+/,/\(/,/!\[/,/\]/,/\)/,",.+?),\\w+\\."])[1];s.insert("toggleChat",[/null/,/\}/,/\)/,/\)/,/;/,/{INSERT}/,/{VAR}/,/\w+/,/=/],`Dsync.toggleChat=()=>{${l}};`);const[,d,u,h]=s.match("selectByID",[/(\w+)/,/\(/,/(\w+)\.(\w+)/,/\[/,/Number/]);i("selectByID",d,`Dsync.defaultData=${u};`),ft.props.itemBar=h,s.append("drawEntityInfo",[/function/,/\w+/,/\(/,/ARGS{3}/,/\)/,/\{/,/{VAR}/,/\w+/,/=/,/\w+/,/\[/,/\w+/,/\(/,/\).+?\.5;/],"Dsync.hooks.drawEntityInfo(...arguments);");const[,m,g,b]=s.match("positionX",[/\(\w+\.(\w+)/,/=/,/\w+\.(\w+)/,/\+/,/\(\w+\.(\w+)/]);ft.props.x=m,ft.props.x1=g,ft.props.x2=b;const[,y,w,v]=s.match("positionX",[/,\w+\.(\w+)/,/=/,/\w+\.(\w+)/,/\+/,/\(\w+\.(\w+)/]);ft.props.y=y,ft.props.y1=w,ft.props.y2=v;const f=s.match("id",[/-NUMBER{1}/,/!==/,/\w+\.(\w+)/,/&&/])[1];ft.props.id=f;const x=s.match("health",[/(\w+)/,/\//,/NUMBER{255}/,/\*/])[1];ft.props.health=x;const k=s.match("maxHealth",[/\w+/,/:/,/NUMBER{35}/,/,/,/(\w+)/,/:/,/NUMBER{100}/])[1];ft.props.maxHealth=k;const E=s.match("hat",[/\w+/,/\(/,/\)/,/\[/,/\w+/,/\./,/(\w+)/,/\]/,/;/,/if/])[1];ft.props.hat=E;const D=s.match("playerValue",[/if/,/\(/,/!/,/\(/,/\w+/,/\./,/(\w+)/,/&/,/\w+/,/\(/,/\)/])[1];ft.props.playerValue=D;const[,L,M]=s.match("itemType",[/(\w+)/,/\(/,/\)/,/\[/,/\w+/,/\]/,/\./,/(\w+)/,/;/]);ft.props.itemType=M,s.prepend("myPlayerID",[/function/,/\w+/,/\(/,/\)/,/\{/,/return/,/\w+/,/!==/,/(\w+)/],"Dsync.myPlayerID=()=>$2;");const I=s.match("entityList",[/new/,/Map/,/,/,/(\w+)/,/=/,/\[/,/\]/,/;/])[1],[,S,T]=s.match("entityData",/(\w+)\(\)\[\w+\.\w+\]\.(\w+)/);s.prepend("entityData",[/function/,/\w+/,/\(/,/ARGS{2}/,/\)/,/\{/,/{VAR}/,/\w+/,/,/],`Dsync.entityData=${S}();Dsync.itemData=${L}();Dsync.entityList=()=>${I};`),ft.props.radius=T,s.insert("showHoods1",[/\w+/,/\(/,/\)/,/\./,/\w+/,/{INSERT}/,/\)/,/continue/,/;/],"&&!Dsync.settings.showHoods"),s.insert("showHoods2",[/\w+\.\w+/,/===/,/\w+/,/{INSERT}/,/\)/,/\{/],"||Dsync.settings.showHoods"),s.insert("websocketString",[/;/,/{INSERT}/,/switch/,/\(/,/(\w+)/,/\[/,/NUMBER{0}/,/\]/,/\)/,/\{/],"Dsync.hooks.stringMessage($3);"),s.replace("zoomWidth",[/(\w+)/,/:/,/NUMBER{1824}/,/,/],"$1:Dsync.scale.w,"),s.replace("zoomHeight",[/(\w+)/,/:/,/NUMBER{1026}/,/,/],"$1:Dsync.scale.h,"),s.append("itemCounter",[/(\w+)/,/\]/,/,/,/(\w+)/,/\./,/\w+/,/\(/,/(\w+)/,/\)/,/,/],"Dsync.hooks.drawItemBar($4,$3,$2),"),s.append("maxCount",["(\\w+","\\.","\\w+)",/=/,/\[/,/ARGS{11}/,/\]/,/,/],"Dsync.maxCount=$2;");const C=s.match("currentCount",[/(\w+)/,/:/,/\[/,/ARGS{11}/,/\]/,/,/])[1];ft.props.currentCount=C;const[,R,A]=s.match("upgradeList",[/&&/,/\(/,/(\w+)/,/\(/,/\w+/,/\./,/(\w+)/,/\[/,/\w+/,/\]/,/\),/]);ft.props.upgradeBar=A,i("upgradeItem",R),s.replace("ping",["({VAR}",/(\w+)/,/=/,/\w+/,/\[/,/NUMBER{1}/,/\]/,/\|/,/\w+/,/\[/,/NUMBER{2}/,/\]/,/<</,/NUMBER{8}/,";)",/(?!{VAR})(\w+)/],"$1Dsync.ping=$2;$3");const P=s.match("clan",[/===/,/\w+/,/\./,/(\w+)/,/\)/,/\)/])[1];ft.props.clan=P;const N=s.match("itemOwner",[/\!/,/\(/,/\w+/,/\./,/(\w+)/,/===/])[1];ft.props.itemOwner=N;const O=s.match("byteLength",[/NUMBER{3}/,/;/,/\w+/,/</,/(\w+)/])[1];s.append("JoinCreateClan",[/,/,/\w+/,/=/,/(\w+)/,/\[/,/NUMBER{2}/,/\]/,/;/],`Dsync.hooks.UpdateClanList([...$2.slice(3,${O})]);`),s.append("UpdateClanList",[/(\w+)/,/\[/,/NUMBER{1}/,/\]/,/;/,/\w+/,/\(/,/\)/,/\./,/\w+/,/\(/,/\w+/,/\)/,/;/],`Dsync.hooks.UpdateClanList([...$2.slice(2,${O})]);`),s.append("DeleteClan",[/{QUOTE}none{QUOTE}/,/,/,/\w+/,/=/,/null/,/,/],"Dsync.hooks.DeleteClan(),"),s.append("drawItem",[/\)/,/;/,/const/,/\w+/,/=/,/\w+/,/\[/,/(?!\d+)\w+/,/\]/,/;.+?\)/,/,/],"(Dsync.settings.markersBottom&&Dsync.hooks.drawItems(...arguments)),"),s.append("bounceProps",[/(\w+)\.\w+/,/\+/,/(\w+)/,/,/,/\w+\.\w+/,/\+/,/(\w+)/,/\),/],"$2.dirX=$3,$2.dirY=$4,");const[,B,U]=s.match("scythe",[/\w+/,/&&/,/(\w+)/,/\(/,/(\w+)/,/\)/,/,/]);i("upgradeScythe",B,`Dsync.goldenCowID=()=>${U};`);const H=s.match("itemDamage",[/(\w+)/,/:/,/46\.5/,/,/])[1];ft.props.itemDamage=H;const $=s.match("itemDataType",[/\w+/,/\./,/(\w+)/,/===/,/NUMBER{2}/])[1];return ft.props.itemDataType=$,s.append("updatePlayer",[/\(/,/ARGS{16}/,/\).+?/,/(\w+)/,/\./,/\w+/,/=/,/NUMBER{0}/],";Dsync.hooks.updatePlayer($2);"),s.append("createEntity",[/(\w+)/,/\./,/\w+/,/=/,/NUMBER{0}/,/;/,/break/,/;/,/default/,/:/,/break/,/\}/],"if (Dsync.myPlayerID() === $2[Dsync.props.id]){Dsync.target=$2;}"),s.replace("renderLayers",["(function",/\w+/,/\(/,/ARGS{2}/,/\)/,/\{/,/{VAR}/,/\w+/,/,/,/\w+/,/=.+?,/,/ARGS{2}/,"\\))",/\}/],"$1;if(Dsync.itemList&&Dsync.hooks.renderLayers&&!Dsync.settings.markersBottom){Dsync.hooks.renderLayers(...arguments);}}"),n[0]=s.code,window.eval=t,t.apply(e,n),void xt()}return t.apply(e,n)}});const xt=()=>{const t=document.querySelector("#game-canvas"),e=document.querySelector("#grid-toggle"),n=document.querySelector("#display-ping-toggle"),o=document.querySelector("#native-helper-toggle"),i=document.querySelector("#hat_menu_content");e.checked&&e.click(),n.checked||n.click(),o.checked&&o.click(),new MutationObserver((t=>{if(y()&&!b())for(let e=0;e<t.length;e++)if("UNEQUIP"===t[e].target.textContent){ft.actualHat=e+1;break}})).observe(i,{childList:!0,subtree:!0}),ot(),window.onkeydown=null,window.onkeyup=null,t.onmousedown=null,t.onmouseup=null,window.addEventListener("keydown",(t=>tt(t,t.code))),window.addEventListener("keyup",(t=>et(t,t.code))),t.addEventListener("mousedown",(t=>tt(t,t.button))),t.addEventListener("mouseup",(t=>et(t,t.button))),ft.hooks.drawEntityInfo=lt,ft.hooks.stringMessage=rt,ft.hooks.drawItemBar=pt,ft.hooks.drawItems=ut,ft.hooks.UpdateClanList=c,ft.hooks.DeleteClan=r,ft.hooks.updatePlayer=yt,ft.hooks.renderLayers=wt,ft.itemList=ft.itemData.filter((t=>t[ft.props.itemDataType]===s.PLACEABLE)).map((t=>t.fU)),dt()}}();