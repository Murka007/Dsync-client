/*
    This code is not intented for use in tampermonkey,
    please use script loader for this.

    name: dsync-client
    author: Murka
    version: 1.0.5
*/

!function(){"use strict";var t,e,n,o,s,a,i,c={d:function(t,e){for(var n in e)c.o(e,n)&&!c.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}};c.d({},{s:function(){return It},c:function(){return Mt}}),function(t){t[t.DIED=19]="DIED",t[t.KILLUPDATE=22]="KILLUPDATE",t[t.KILLED=28]="KILLED",t[t.SPAWN=35]="SPAWN"}(t||(t={})),function(t){t[t.PRIMARY=0]="PRIMARY",t[t.SECONDARY=1]="SECONDARY",t[t.HEAL=2]="HEAL",t[t.WALL=3]="WALL",t[t.SPIKE=4]="SPIKE",t[t.WINDMILL=5]="WINDMILL",t[t.TREE=6]="TREE",t[t.TRAP=7]="TRAP",t[t.PLATFORM=8]="PLATFORM",t[t.SPAWN=9]="SPAWN",t[t.TURRET=10]="TURRET"}(e||(e={})),function(t){t[t.PLATFORM=9]="PLATFORM",t[t.ROOF=26]="ROOF"}(n||(n={})),function(t){t[t.BUSH=1]="BUSH",t[t.BERSERKER=2]="BERSERKER",t[t.JUNGLE=3]="JUNGLE",t[t.CRYSTAL=4]="CRYSTAL",t[t.SPIKEGEAR=5]="SPIKEGEAR",t[t.IMMUNITY=6]="IMMUNITY",t[t.BOOST=7]="BOOST",t[t.APPLEHAT=8]="APPLEHAT",t[t.SCUBA=9]="SCUBA",t[t.HOOD=10]="HOOD",t[t.DEMOLIST=11]="DEMOLIST"}(o||(o={})),function(t){t[t.SHIELD=11]="SHIELD",t[t.STICK=13]="STICK",t[t.HAMMER=15]="HAMMER"}(s||(s={})),function(t){t[t.ATTACKING=0]="ATTACKING",t[t.SHOOTING=1]="SHOOTING",t[t.PLACEABLE=2]="PLACEABLE",t[t.FOOD=3]="FOOD"}(a||(a={})),function(t){t[t.COW=14]="COW",t[t.SHARK=23]="SHARK",t[t.WOLF=24]="WOLF",t[t.GOLDENCOW=25]="GOLDENCOW",t[t.DRAGON=27]="DRAGON",t[t.MAMMOTH=28]="MAMMOTH",t[t.DUCK=36]="DUCK"}(i||(i={}));let r=[];const p=t=>{r=t},l=()=>{r=[]},d={get(t){const e=localStorage.getItem(t);return null===e?null:JSON.parse(e)},set(t,e){localStorage.setItem(t,JSON.stringify(e))},delete(t){localStorage.removeItem(t)}},u=(()=>{const t={primary:"Digit1",secondary:"Digit2",heal:"KeyQ",wall:"Digit4",spike:"KeyV",windmill:"KeyN",trap:"KeyF",turret:"KeyH",tree:"KeyU",platform:"KeyT",spawn:"KeyJ",up:"KeyW",left:"KeyA",down:"KeyS",right:"KeyD",attack:0,autoattack:"KeyE",lockRotation:"KeyX",openChat:"Enter",invisibleHit:2,spikeInsta:"KeyR",toggleMenu:"Escape",fastBreak:"KeyZ",unequip:"...",bush:"...",berserker:"...",jungle:"...",crystal:"...",spikegear:"...",immunity:4,boost:3,applehat:"...",scuba:"...",hood:"...",demolist:"...",placementSpeed:15,autoheal:!0,autohealDelay:85,jungleOnClown:!0,lastHat:!0,autoScuba:!0,enemyTracers:!0,teammateTracers:!0,animalTracers:!0,enemyColor:"#cc5151",teammateColor:"#8ecc51",animalColor:"#518ccc",arrows:!0,rainbow:!1,drawHP:!0,showHoods:!0,itemCounter:!0,skipUpgrades:!0,itemMarkers:!0,teammateMarkers:!0,enemyMarkers:!0,trapActivated:!0,itemMarkersColor:"#8ecc51",teammateMarkersColor:"#cfbc5f",enemyMarkersColor:"#cc5151",trapActivatedColor:"#48b2b8",markersBottom:!0,autochat:!1,autochatMessages:["Dsync Client","What is it?","The most advanced hack for sploop!","Download on greasyfork!"],kill:!0,killMessage:"{NAME}, you suck! {KILL}x",autospawn:!1,smoothZoom:!0,menuTransparency:!1};return t})(),m=Object.assign(Object.assign({},u),d.get("Dsync-settings"));for(const t in m)u.hasOwnProperty(t)||delete m[t];d.set("Dsync-settings",m);var h=m;const g=t=>It.defaultData[It.props.itemBar][t],y=()=>{const t=g(1);return It.itemData[t][It.props.itemType]===e.SECONDARY},b=()=>{const t=g(1);return It.itemData[t][It.props.itemDataType]===a.SHOOTING},w=()=>{const t=It.entityList();return[...t[i.COW],...t[i.SHARK],...t[i.WOLF],...t[i.GOLDENCOW],...t[i.DRAGON],...t[i.MAMMOTH],...t[i.DUCK]]},v=()=>It.entityList()[0].filter((t=>{const e=t[It.props.id]===It.myPlayerID(),n=r.includes(t[It.props.itemOwner]);return!e&&!n})),f=t=>{const e=It.itemData[g(t)].range,o=It.entityData[0][It.props.radius],a=b()&&1===t,i=(()=>{const{x2:t,y2:e}=It.myPlayer,n=v().sort(((n,o)=>{const s=n[It.props.x2],a=n[It.props.y2],i=o[It.props.x2],c=o[It.props.y2];return R(s,a,t,e)-R(i,c,t,e)}));return n?n.map((n=>{const o=n[It.props.x2],s=n[It.props.y2];return{x2:o,y2:s,angle:Math.atan2(s-e,o-t),distance:R(o,s,t,e),target:n}})):null})().filter((t=>{const s=t.distance<e+o;return a?!x(t,n.ROOF,!1)&&s:s})).sort(((t,e)=>{const n=t.target[It.props.currentItem]===s.SHIELD,o=e.target[It.props.currentItem]===s.SHIELD;return n?1:o?-1:0}));return i.length?i[0]:null},x=(t,e,n=!0)=>{const o=It.entityData[0][It.props.radius],s=It.entityData[e][It.props.radius],{x2:a,y2:i}=t;return It.entityList()[e].some((t=>{const e=t[It.props.x2],c=t[It.props.y2],p=t[It.props.itemOwner],l=!(r.includes(p)||It.myPlayer.ownerID===p),d=R(e,c,a,i)<o+s;return n?l&&d:d}))},k=(t,e)=>{if(t instanceof HTMLElement)t.classList.remove(e);else for(const n of t)n.classList.remove(e)},E=t=>{if("0"===(t=t.toString()))return"LBTN";if("1"===t)return"MBTN";if("2"===t)return"RBTN";if("3"===t)return"XBTN2";if("4"===t)return"XBTN1";if("Escape"===t)return"ESC";if("BracketLeft"===t)return"[";if("BracketRight"===t)return"]";if("NumpadDivide"===t)return"NUMDIV";if("NumpadMultiply"===t)return"NUMMULT";if("NumpadSubtract"===t)return"NUMSUB";if("NumpadDecimal"===t)return"NUMDEC";if("CapsLock"===t)return"CAPS";if("PrintScreen"===t)return"PRNT";if("Backslash"===t)return"\\";if("Backquote"===t)return"BQUOTE";if("PageDown"===t)return"PAGEDN";const e=/^(?:Numpad|Digit|Arrow|Key)(\w+)$/;e.test(t)&&(t=t.replace(e,"$1").replace(/Numpad/,"NUM"));const n=/^(Control|Shift|Alt)(.).*/;return n.test(t)&&(t=t.replace(n,"$2$1").replace(/Control/,"CTRL")),t.toUpperCase()},D=(t,e)=>t.classList.contains(e),L=t=>{const e=t||document.activeElement;return["TEXTAREA","INPUT"].includes(e.tagName)},M=()=>{const t=document.querySelector("#homepage");return t&&"none"===t.style.display},I=t=>{const e=(t=>({id:t[It.props.id],type:t.type,x:t[It.props.x],y:t[It.props.y],x1:t[It.props.x1],y1:t[It.props.y1],x2:t[It.props.x2],y2:t[It.props.y2],health:t[It.props.health],playerValue:t[It.props.playerValue],angle:t[It.props.angle],angle1:t[It.props.angle1],angle2:t[It.props.angle2]}))(t),n=It.entityData[e.type],o=n[It.props.radius],s=n[It.props.maxHealth],a=Math.ceil(e.health/255*s);return Object.assign(Object.assign({},e),{health:a,maxHealth:s,radius:o})},T=t=>{const e=t[It.props.x2],n=t[It.props.y2],o=It.entityData[6][It.props.radius];return[...v(),...w()].some((t=>{const s=t[It.props.x2],a=t[It.props.y2],i=It.entityData[t.type][It.props.radius];return R(s,a,e,n)<o+i-25}))},A=(t,e)=>{let n=null;const o=(It.myPlayer||{}).ownerID===e,s=r.includes(e),a=6===t.type&&(o||s);if(h.itemMarkers&&o?n=h.itemMarkersColor:h.teammateMarkers&&s?n=h.teammateMarkersColor:!h.enemyMarkers||o||s||(n=h.enemyMarkersColor),h.trapActivated&&a){const e=t[It.props.id];if(!t.active&&T(t)&&(t.active=e),t.active===e)return h.trapActivatedColor;t.active=null}return n},C=(t,e)=>{t.strokeStyle="#303030",t.lineWidth=3,t.fillStyle=e,t.beginPath(),t.arc(0,0,9,0,2*Math.PI),t.fill(),t.stroke(),t.closePath()},R=(t,e,n,o)=>Math.sqrt(Math.pow(t-n,2)+Math.pow(e-o,2)),S=(t,e,n)=>{const o=It.target[It.props.x],s=It.target[It.props.y],{x:a,y:i}=e,c=h.rainbow?`hsl(${It.hsl}, 100%, 50%)`:((t,e)=>t.id===It.myPlayerID()||e?h.teammateColor:0!==t.type?h.animalColor:h.enemyColor)(e,n);if(h.arrows){const e=8,n=Math.atan2(i-s,a-o),r=Math.min(100+2*e,R(o,s,a,i)-2*e);((t,e,n,o,s,a)=>{t.save(),t.translate(n,o),t.rotate(Math.PI/4),t.rotate(s),t.globalAlpha=.75,t.strokeStyle=a,t.lineCap="round",t.lineWidth=8,t.beginPath(),t.moveTo(-e,-e),t.lineTo(e,-e),t.lineTo(e,e),t.stroke(),t.closePath(),t.restore()})(t,e,o+r*Math.cos(n),s+r*Math.sin(n),n,c)}else((t,e,n,o,s,a)=>{t.save(),t.globalAlpha=.75,t.strokeStyle=a,t.lineCap="round",t.lineWidth=5,t.beginPath(),t.moveTo(e,n),t.lineTo(o,s),t.stroke(),t.restore()})(t,o,s,a,i,c)},O=(t,e,n)=>{t.save(),t.fillStyle="#fff",t.strokeStyle="#303030",t.lineWidth=8,t.lineJoin="round",t.font="bold 15px Montserrat";const o=n(t.measureText(e).width,parseInt(t.font.match(/\d+/)[0])||1);t.strokeText(e,...o),t.fillText(e,...o),t.restore()},P=t=>new Promise((e=>setTimeout(e,t))),N=t=>{const e={0:t,toString:t=>e[0].toString(t),valueOf:()=>e[0].valueOf(),get length(){return e[0].length}};return e},H=(t,e,n)=>n*(e-t)+t;var B=function(t,e,n,o){return new(n||(n=Promise))((function(s,a){function i(t){try{r(o.next(t))}catch(t){a(t)}}function c(t){try{r(o.throw(t))}catch(t){a(t)}}function r(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,c)}r((o=o.apply(t,e||[])).next())}))};let U=0,$=!1,K=!1,W=!1,q=!1,j=!1,G=null;const z=new Map;let Y=0,V=!1;const F=(t,e=!1,n=!0)=>{const o=(It.myPlayer||{}).hat||0;if(0===t)t=o;else if(o===t&&!e)return;n&&(It.actualHat=t),It.equipHat(t),It.equipHat(t)},J=t=>{void 0!==t&&(W=t),It.selectByID(g(Number(W)))},_=(t=null)=>{It.attack(null!==t?t:It.getAngle())},X=(t,e=null)=>{It.selectItem(t),_(e),It.stopAttack(),J(),$&&_(e)};let Q=0;const Z=()=>{null!==G&&(X(G),Q++,0==(Q%=h.placementSpeed)?setTimeout(Z):queueMicrotask(Z))},tt=(t,e)=>{(t=>It.defaultData[It.props.itemBar].some((e=>It.itemData[e][It.props.itemType]===t)))(t)&&(z.set(e,t),G=t,1===z.size&&Z())},et=()=>{q&&(It.selectItem(e.HEAL),_(),It.stopAttack(),J(),$&&_(),setTimeout(et,0))},nt=()=>{if(It.mousemove=!0,It.aimTarget=null,!j)return;let t=null;const e=f(+!W);e&&(t=e.angle,It.mousemove=!1,It.aimTarget=e.target),J(!W),_(t),It.stopAttack(),J(!W),setTimeout(nt,75)};let ot=0,st=!1,at=!1,it=0;const ct=(t,n)=>{if(1===n&&t.preventDefault(),t instanceof KeyboardEvent&&t.repeat)return;if(It.active)return;if(n!==h.toggleMenu||L(t.target)||It.toggleMenu(),!M())return;if(n===h.openChat&&(L()||t.preventDefault(),It.toggleChat()),L(t.target))return;n===h.primary&&J(!1),n===h.secondary&&y()&&J(!0),n===h.heal&&(q=!0,et()),n===h.wall&&tt(e.WALL,n),n===h.spike&&tt(e.SPIKE,n),n===h.windmill&&tt(e.WINDMILL,n),n===h.trap&&tt(e.TRAP,n),n===h.turret&&tt(e.TURRET,n),n===h.tree&&tt(e.TREE,n),n===h.platform&&tt(e.PLATFORM,n),n===h.spawn&&tt(e.SPAWN,n),n===h.unequip&&F(It.myPlayer.hat,!0),n===h.bush&&F(o.BUSH),n===h.berserker&&F(o.BERSERKER),n===h.jungle&&F(o.JUNGLE),n===h.crystal&&F(o.CRYSTAL),n===h.spikegear&&F(o.SPIKEGEAR),n===h.immunity&&F(o.IMMUNITY),n===h.boost&&F(o.BOOST),n===h.applehat&&F(o.APPLEHAT),n===h.scuba&&F(o.SCUBA),n===h.hood&&F(o.HOOD),n===h.demolist&&F(o.DEMOLIST),n===h.invisibleHit&&y()&&(j=!0,nt()),n===h.spikeInsta&&(()=>{let t=null;const n=f(0);n&&(t=n.angle);const s=W;F(o.BERSERKER),J(!1),X(e.SPIKE,t),_(t),It.stopAttack(),J(s)})(),n===h.fastBreak&&(()=>{if(at)return;it=Date.now();const t=g(0),e=g(1),n=y()&&!b()&&(e===s.HAMMER||t===s.STICK);st=W,at=!0,ot=It.myPlayer.hat,J(n),F(o.DEMOLIST),$=!0,_()})();const a=U;if(n===h.up&&(U|=1),n===h.left&&(U|=4),n===h.down&&(U|=2),n===h.right&&(U|=8),a!==U&&It.move(U),t instanceof MouseEvent&&n===h.attack){!It.mousedown(t)&&It.mousemove&&($=!0,It.attack(It.getAngle()))}n===h.autoattack&&(K=!K,It.autoattack(K)),n===h.lockRotation&&It.toggleRotation()},rt=(t,e)=>{e===h.heal&&q&&(q=!1),e===h.invisibleHit&&j&&(j=!1),e===h.fastBreak&&B(void 0,void 0,void 0,(function*(){if(!at)return;It.stopAttack(),$=!1,J(st);const t=Date.now()-it;t<1300&&(yield P(1300-t)),It.myPlayer.isClown||F(ot),at=!1}));const n=U;if(e===h.up&&(U&=-2),e===h.left&&(U&=-5),e===h.down&&(U&=-3),e===h.right&&(U&=-9),n!==U&&It.move(U),t instanceof MouseEvent&&e===h.attack&&(It.mouseup(t),$=!1),null!==G&&z.delete(e)){const t=[...z];G=t.length?t[t.length-1][1]:null}};var pt=function(t,e,n,o){return new(n||(n=Promise))((function(s,a){function i(t){try{r(o.next(t))}catch(t){a(t)}}function c(t){try{r(o.throw(t))}catch(t){a(t)}}function r(t){var e;t.done?s(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(i,c)}r((o=o.apply(t,e||[])).next())}))};var lt=()=>{const t=document.createElement("iframe"),e=new Blob(['\n        <style>@import"https://fonts.googleapis.com/css2?family=Lato:wght@400;700;900&display=swap";header{background:#2f2f31;color:#76689a;padding:5px 10px;display:flex;justify-content:flex-start;align-items:center}header #version{align-self:flex-end;color:#9787bd;font-size:.5em;font-weight:600;margin-left:10px}header #version svg{fill:#9787bd}header .icon{margin-left:auto;width:35px;height:35px;fill:#cebcb4;transition:fill 100ms;cursor:pointer}header .icon:hover{fill:#ffe7dc}#navbar-container{display:flex;flex-direction:column;padding:10px;margin-right:10px;background:#2f2f31}#navbar-container .open-menu{outline:none;border:none;cursor:pointer;font-weight:900;font-size:1.4rem;padding:10px;background:#313135;color:#ffe7dc;border-right:1px solid;border-right-color:rgba(0,0,0,0);transition:background 100ms,color 100ms,border-right-color 100ms}#navbar-container .open-menu:hover{background:#313135}#navbar-container .open-menu:active{background:#ffe7dc;color:#313135}#navbar-container .open-menu.active{pointer-events:none;background:#313135;border-right-color:#ffe7dc}#navbar-container .bottom-align{margin-bottom:0px;margin-top:auto !important}@-webkit-keyframes appear{from{opacity:0}to{opacity:1}}@-webkit-keyframes disappear{from{opacity:1}to{opacity:0}}@-webkit-keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}@keyframes appear{from{opacity:0}to{opacity:1}}@keyframes disappear{from{opacity:1}to{opacity:0}}@keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}.menu-page{display:none;background:#2f2f31;padding:10px;padding-top:0px}.menu-page.opened{display:block;animation:appear 300ms forwards}.menu-page h1{color:#76689a;font-size:1.5em;font-weight:900}.menu-page h2{color:#9494b8;font-size:1em;font-weight:900}.menu-page p{color:#675a86;font-size:.5em;font-weight:700}.menu-page .content{display:flex;justify-content:space-between;align-items:center;gap:10px}.menu-page .content-double{display:flex;flex-wrap:wrap;justify-content:space-between;gap:10px;width:250px}.menu-page .content-double button{width:48%}.menu-page .content-double:nth-child(3){width:100%}.menu-page #killMessage{width:270px}.menu-page .highlight{font-weight:700;color:#ffe7dc;background:#6a6a81;padding:0 1px}.menu-page .section{background:#36363d;border-radius:5px;margin:20px 0}.menu-page .section:last-child{margin-bottom:0px}.menu-page .section .section-title{display:flex;justify-content:space-between;align-items:center;padding:10px}.menu-page .section .section-title .icon{width:25px;height:25px;margin-right:10px;fill:#cebcb4;transition:fill 100ms,transform 100ms}.menu-page .section .section-title .icon.rotate{transform:rotate(90deg);fill:#ffe7dc}.menu-page .section .section-title:hover .icon{fill:#ffe7dc}.menu-page .section:not(.opened) .section-title{cursor:pointer}.menu-page .section:not(.opened) .section-content{overflow:hidden}.menu-page .section .section-content{padding:10px;padding-top:0px;display:grid;grid-template-columns:1fr 1fr;transition:max-height 250ms cubic-bezier(0, 1, 0, 1);max-height:0px}.menu-page .section .section-content.one-row{grid-template-columns:1fr}.menu-page .section .section-content.opened{transition:max-height 250ms ease-out;max-height:100%}.menu-page .section .section-content .split{grid-column:1/3;margin-top:10px;background:#40404a;height:2px}.menu-page .section .section-content .section-option{display:flex;justify-content:space-between;align-items:center;margin-top:10px}.menu-page .section .section-content .section-option .section-option-title{color:#6a6a81;font-size:.8em}.menu-page .section .section-content .section-option .section-option-hotkeyInput{margin-right:50px;cursor:pointer;font-weight:900;font-size:.6em;padding-bottom:8px;outline:none;border:none;text-align:center;width:80px;height:35px;border-radius:7.5px;background:#7d7d9b;color:#adbcd8;box-shadow:0px -6px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .section-option-hotkeyInput.red{background:#9e5454;color:#d8adad;box-shadow:0px -6px 0px 0px #783d3d inset}.menu-page .section .section-content .section-option .switch-checkbox{position:relative;margin-right:25px;width:70px;height:25px}.menu-page .section .section-content .section-option .switch-checkbox input{width:0;height:0;opacity:0}.menu-page .section .section-content .section-option .switch-checkbox input:checked+span{background:#7d7d9b;box-shadow:0px 5px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .switch-checkbox input:checked+span:before{background:#ffe7dc;transform:translateX(42px)}.menu-page .section .section-content .section-option .switch-checkbox span{position:absolute;cursor:pointer;top:0;left:0;bottom:0;right:0;width:100%;height:100%;display:flex;align-items:center;background:#5f5f79;box-shadow:0px 5px 0px 0px #4d4d5f inset;border-radius:10px;transition:all 100ms ease-in-out}.menu-page .section .section-content .section-option .switch-checkbox span:before{position:absolute;content:"";width:28px;height:28px;border-radius:50%;background:#f0dcd3;box-shadow:0px -5px 0px 0px #cebcb4 inset;border:2px solid #adbcd8;transition:all 100ms ease-in-out}.menu-page .section .section-content .section-option .slider{position:relative;margin-right:45px}.menu-page .section .section-content .section-option .slider input{-webkit-appearance:none;outline:none;cursor:pointer;width:154px;height:20.8333333333px;border-radius:10px;background:#7d7d9b;box-shadow:0px 5px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .slider input::-webkit-slider-thumb{-webkit-appearance:none;width:28px;height:28px;border-radius:50%;background:#ffe7dc;box-shadow:0px -5px 0px 0px #cebcb4 inset;border:2px solid #adbcd8}.menu-page .section .section-content .section-option .slider .slider-value{position:absolute;margin-left:5px;color:#6a6a81;font-size:.65em}.menu-page .section .section-content .section-option .input{outline:none;border:none;font-weight:900;text-align:center;width:130px;height:35px;padding-bottom:6px;border-radius:7.5px;background:#7d7d9b;color:#adbcd8;box-shadow:0px -6px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .input:focus{border:3px solid #f0dcd3}.menu-page .section .section-content .section-option .button{outline:none;border:none;font-weight:900;cursor:pointer;height:40px;padding-bottom:6px;border-radius:7.5px;background:#7d7d9b;color:#adbcd8;box-shadow:0px -6px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .button:active{padding-bottom:0px;padding-top:3px;box-shadow:0px 3px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .button.red{background:#9e5454;color:#d8adad;box-shadow:0px -6px 0px 0px #783d3d inset}.menu-page .section .section-content .section-option .button.red:active{box-shadow:0px 3px 0px 0px #783d3d inset}.menu-page .section .section-content .section-option .form-upload{position:relative;font-size:.55em;font-weight:400;letter-spacing:1.5px;text-align:center;width:100%;border-radius:5px;border:2px dashed;border-color:rgba(173,188,216,.5411764706);padding:15px 10px;transition:border-color 100ms}.menu-page .section .section-content .section-option .form-upload:hover{border-color:#adbcd8}.menu-page .section .section-content .section-option .form-upload.red{border-color:#9e5454;animation:failedTransition 400ms}.menu-page .section .section-content .section-option .form-upload.red .light{color:#d8adad}.menu-page .section .section-content .section-option .form-upload.green{border-color:#77c468}.menu-page .section .section-content .section-option .form-upload.green .light{color:#a1dda1}.menu-page .section .section-content .section-option .form-upload input{position:absolute;opacity:0;top:0;left:0;bottom:0;right:0;width:100%;height:100%;cursor:pointer}.menu-page .section .section-content .section-option .form-upload .light{color:#adbcd8}.menu-page .section .section-content .section-option .form-upload .light-extra{color:#f0dcd3}.menu-page .section .section-content .section-option .tooltip{position:relative;margin-left:5px;color:#8181a0}.menu-page .section .section-content .section-option .tooltip:hover{cursor:pointer}.menu-page .section .section-content .section-option .tooltip:hover .tooltip-text{visibility:visible}.menu-page .section .section-content .section-option .tooltip .tooltip-text{position:absolute;visibility:hidden;text-align:center;overflow:visible;bottom:calc(100% - 5px);left:50%;transform:translateX(-50%);background-color:#7d7d9b;color:#ffe7dc;width:225px;font-size:13px;font-weight:600;padding:5px;border-radius:5px;border:3px solid #5f5f79}.menu-page .section .section-content .section-option .tooltip .tooltip-text.left{text-align:left}@-webkit-keyframes appear{from{opacity:0}to{opacity:1}}@-webkit-keyframes disappear{from{opacity:1}to{opacity:0}}@-webkit-keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}@keyframes appear{from{opacity:0}to{opacity:1}}@keyframes disappear{from{opacity:1}to{opacity:0}}@keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}@-webkit-keyframes appear{from{opacity:0}to{opacity:1}}@-webkit-keyframes disappear{from{opacity:1}to{opacity:0}}@-webkit-keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}@keyframes appear{from{opacity:0}to{opacity:1}}@keyframes disappear{from{opacity:1}to{opacity:0}}@keyframes failedTransition{0%{transform:translate(0px, 0px)}10%{transform:translate(-35px, -10px)}30%{transform:translate(25px, 8px)}50%{transform:translate(-15px, -6px)}70%{transform:translate(5px, 4px)}100%{transform:translate(0px, 0px)}}html,body{margin:0;padding:0;background:rgba(0,0,0,0) !important;scrollbar-width:10px;scrollbar-track-color:#36363d;scrollbar-face-color:#494955}*{font-family:"Lato",sans-serif}h1,h2,h3,h4,p{margin:0}#menu-container{font-weight:900;font-size:2rem;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:1024px;height:700px;display:flex;justify-content:center;align-items:center;user-select:none}#menu-container.open{animation:appear 100ms forwards}#menu-container.close{animation:disappear 100ms forwards}#menu-container.transparent #menu-wrapper{background:rgba(43,43,44,.4666666667)}#menu-container.transparent #navbar-container{background:rgba(47,47,49,.6431372549)}#menu-container.transparent .menu-page{background:rgba(47,47,49,.6431372549)}#menu-container.transparent .section{background:rgba(54,54,61,.6509803922)}#menu-wrapper{display:flex;flex-direction:column;width:100%;height:80%;background:#2b2b2c;border-radius:5px;padding:10px}main{display:flex;justify-content:space-between;margin-top:10px;height:100%}main #menu-page-container{width:100%;height:500px;overflow-y:scroll}.default-color{outline:none;border:none;width:10px;height:10px;border-radius:100%;cursor:pointer}input[id][type=color]{outline:none;border:none;padding:0 1px;margin:0;height:24px;background-color:#7d7d9b;border-radius:5px;cursor:pointer}::-webkit-scrollbar{width:10px}::-webkit-scrollbar-track{background:#36363d;border-radius:10px}::-webkit-scrollbar-thumb{background:#494955;border-radius:10px}</style>\n        <div id="menu-container" class="open">\n            <div id="menu-wrapper">\n                <header> <span>Dsync Client</span> <div id="version"> <svg width="15" height="15" viewBox="0 0 16 16" version="1.1"> <path d="M11.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122V6A2.5 2.5 0 0110 8.5H6a1 1 0 00-1 1v1.128a2.251 2.251 0 11-1.5 0V5.372a2.25 2.25 0 111.5 0v1.836A2.492 2.492 0 016 7h4a1 1 0 001-1v-.628A2.25 2.25 0 019.5 3.25zM4.25 12a.75.75 0 100 1.5.75.75 0 000-1.5zM3.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0z"></path> </svg> <span></span> </div> <svg id="close-menu" class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="30px" height="30px"> <path d="M 7 4 C 6.744125 4 6.4879687 4.0974687 6.2929688 4.2929688 L 4.2929688 6.2929688 C 3.9019687 6.6839688 3.9019687 7.3170313 4.2929688 7.7070312 L 11.585938 15 L 4.2929688 22.292969 C 3.9019687 22.683969 3.9019687 23.317031 4.2929688 23.707031 L 6.2929688 25.707031 C 6.6839688 26.098031 7.3170313 26.098031 7.7070312 25.707031 L 15 18.414062 L 22.292969 25.707031 C 22.682969 26.098031 23.317031 26.098031 23.707031 25.707031 L 25.707031 23.707031 C 26.098031 23.316031 26.098031 22.682969 25.707031 22.292969 L 18.414062 15 L 25.707031 7.7070312 C 26.098031 7.3170312 26.098031 6.6829688 25.707031 6.2929688 L 23.707031 4.2929688 C 23.316031 3.9019687 22.682969 3.9019687 22.292969 4.2929688 L 15 11.585938 L 7.7070312 4.2929688 C 7.5115312 4.0974687 7.255875 4 7 4 z"/> </svg> </header>\n\n                <main>\n                    <aside id="navbar-container"> <button class="open-menu active">Keybinds</button> <button class="open-menu">Combat</button> <button class="open-menu">Visuals</button> <button class="open-menu">Misc</button> <button class="open-menu bottom-align">Credits</button> </aside>\n\n                    <div id="menu-page-container">\n                        <div class="menu-page opened"> <h1>Keybinds</h1> <p>Setup keybinds for items, weapons and hats</p> <div class="section"> <div class="section-title"> <h2>Items & Weapons</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Primary</span> <button id="primary" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Secondary</span> <button id="secondary" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Heal</span> <button id="heal" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Wall</span> <button id="wall" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Spike</span> <button id="spike" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Windmill</span> <button id="windmill" class="section-option-hotkeyInput"></button> </div> </div> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Trap/Boost</span> <button id="trap" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Turret</span> <button id="turret" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Tree/Stone</span> <button id="tree" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Platform</span> <button id="platform" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Cosy bed</span> <button id="spawn" class="section-option-hotkeyInput"></button> </div> </div> </div> </div> <div class="section"> <div class="section-title"> <h2>Controls & Movement</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Up</span> <button id="up" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Left</span> <button id="left" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Down</span> <button id="down" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Right</span> <button id="right" class="section-option-hotkeyInput"></button> </div> <div class="split"></div> <div class="section-option"> <span class="section-option-title">Attack</span> <button id="attack" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Auto attack</span> <button id="autoattack" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Lock rotation</span> <button id="lockRotation" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Open chat</span> <button id="openChat" class="section-option-hotkeyInput"></button> </div> <div class="split"></div> <div class="section-option"> <span class="section-option-title">Invisible hit</span> <button id="invisibleHit" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Spike insta</span> <button id="spikeInsta" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Toggle Dsync Menu</span> <button id="toggleMenu" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title"> Fast break <span class="tooltip"> * <span class="tooltip-text">When you press a key, it equips a demolist and starts attacking</span> </span> </span> <button id="fastBreak" class="section-option-hotkeyInput"></button> </div> </div> </div> <div class="section"> <div class="section-title"> <h2>Hats</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Unequip hat</span> <button id="unequip" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Bush hat</span> <button id="bush" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Berserker</span> <button id="berserker" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Jungle gear</span> <button id="jungle" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Crystal gear</span> <button id="crystal" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Spike gear</span> <button id="spikegear" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Immunity gear</span> <button id="immunity" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Boost hat</span> <button id="boost" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Apple hat</span> <button id="applehat" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Scuba gear</span> <button id="scuba" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Hood</span> <button id="hood" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Demolist</span> <button id="demolist" class="section-option-hotkeyInput"></button> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Combat</h1> <p>Modify combat settings, change pvp behavior</p> <div class="section opened"> <div class="section-title"> <h2>Placement</h2> </div> <div class="section-content one-row"> <div class="section-option"> <span class="section-option-title"> Placement speed <span class="tooltip"> * <span class="tooltip-text">The higher value, the faster you place</span> </span> </span> <label class="slider"> <input id="placementSpeed" min="1" max="100" type="range"> <span class="slider-value">100</span> </label> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Healing</h2> </div> <div class="section-content"> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Autoheal</span> <label class="switch-checkbox"> <input id="autoheal" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Healing delay</span> <label class="slider"> <input id="autohealDelay" min="0" max="150" type="range"> <span class="slider-value">150</span> </label> </div> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Hats</h2> </div> <div class="section-content"> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Jungle On Clown</span> <label class="switch-checkbox"> <input id="jungleOnClown" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title"> Equip last hat <span class="tooltip"> * <span class="tooltip-text">On spawn, the last hat you had will be equipped</span> </span> </span> <label class="switch-checkbox"> <input id="lastHat" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Auto scuba</span> <label class="switch-checkbox"> <input id="autoScuba" type="checkbox"> <span></span> </label> </div> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Visuals</h1> <p>Customize your visuals, or you can disable it for performance</p> <div class="section opened"> <div class="section-title"> <h2>Tracers</h2> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Enemies</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="enemyColor" type="color"> <label class="switch-checkbox"> <input id="enemyTracers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title">Arrows</span> <label class="switch-checkbox"> <input id="arrows" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Teammates</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="teammateColor" type="color"> <label class="switch-checkbox"> <input id="teammateTracers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title">Rainbow colors</span> <label class="switch-checkbox"> <input id="rainbow" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Animals</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="animalColor" type="color"> <label class="switch-checkbox"> <input id="animalTracers" type="checkbox"> <span></span> </label> </div> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Player</h2> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Show invisible players</span> <label class="switch-checkbox"> <input id="showHoods" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Draw HP value</span> <label class="switch-checkbox"> <input id="drawHP" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Item counter</span> <label class="switch-checkbox"> <input id="itemCounter" type="checkbox"> <span></span> </label> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Markers</h2> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Your markers</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="itemMarkersColor" type="color"> <label class="switch-checkbox"> <input id="itemMarkers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title">Teammates</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="teammateMarkersColor" type="color"> <label class="switch-checkbox"> <input id="teammateMarkers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title">Enemies</span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="enemyMarkersColor" type="color"> <label class="switch-checkbox"> <input id="enemyMarkers" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title"> Trap activated <span class="tooltip"> * <span class="tooltip-text">When the player or animal will be trapped, marker will change color</span> </span> </span> <div class="content"> <button class="default-color" title="Reset Color"></button> <input id="trapActivatedColor" type="color"> <label class="switch-checkbox"> <input id="trapActivated" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title"> Markers at bottom <span class="tooltip"> * <span class="tooltip-text">Faster, but you won\'t be able to see markers if you\'re trapped or on platform</span> </span> </span> <label class="switch-checkbox"> <input id="markersBottom" type="checkbox"> <span></span> </label> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Misc</h1> <p>Customize misc settings, add autochat messages, reset settings</p> <div class="section opened"> <div class="section-title"> <h2>Chat</h2> </div> <div class="section-content one-row"> <div class="section-option"> <span class="section-option-title">Autochat</span> <div class="content"> <input class="input autochat" type="text" maxlength="35"> <input class="input autochat" type="text" maxlength="35"> <input class="input autochat" type="text" maxlength="35"> <input class="input autochat" type="text" maxlength="35"> <label class="switch-checkbox"> <input id="autochat" type="checkbox"> <span></span> </label> </div> </div> <div class="section-option"> <span class="section-option-title"> Message on kill <span class="tooltip"> * <span class="tooltip-text left"> <div>Variables:</div> <div><span class="highlight">{KILL}</span> - amount of kills</div> <div><span class="highlight">{NAME}</span> - name of the player you killed</div> </span> </span> </span> <div class="content"> <input id="killMessage" class="input" type="text" maxlength="35"> <label class="switch-checkbox"> <input id="kill" type="checkbox"> <span></span> </label> </div> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Other</h2> </div> <div class="section-content one-row"> <div class="section-option"> <span class="section-option-title">Autospawn</span> <label class="switch-checkbox"> <input id="autospawn" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title"> Smooth zoom <span class="tooltip"> * <span class="tooltip-text">Disable for performance</span> </span> </span> <label class="switch-checkbox"> <input id="smoothZoom" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title"> Skip upgrades <span class="tooltip"> * <span class="tooltip-text">When you have only 1 item in the upgradebar, it will automatically select it</span> </span> </span> <label class="switch-checkbox"> <input id="skipUpgrades" type="checkbox"> <span></span> </label> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Menu</h2> </div> <div class="section-content one-row"> <div class="section-option"> <span class="section-option-title">Menu transparency</span> <label class="switch-checkbox"> <input id="menuTransparency" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <div class="content-double"> <button id="reset-settings" class="button red">Reset settings</button> <button id="download-settings" class="button">Download settings</button> <div class="form-upload"> <input id="upload-settings" type="file" accept=".txt"> <span class="light">DRAG SETTINGS FILE HERE OR <span class="light-extra">BROWSE</span></span> </div> </div> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Credits</h1> </div>\n                    </div>\n                </main>\n            </div>\n        </div>\n    '],{type:"text/html; charset=utf-8"});t.src=URL.createObjectURL(e),t.id="iframe-page-container",document.body.appendChild(t);const n=document.createElement("style");n.innerHTML="\n        #iframe-page-container {\n            position: absolute;\n            top: 0;\n            left: 0;\n            bottom: 0;\n            right: 0;\n            width: 100%;\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            z-index: 99;\n            border: none;\n            outline: none;\n            overflow: scroll;\n            display: none;\n        }\n\n        .iframe-opened {\n            display: block!important;\n        }\n    ",document.head.appendChild(n),t.onload=()=>{const e=t.contentWindow,n=e.document;URL.revokeObjectURL(t.src);const o=n.getElementById("menu-container"),s=n.querySelectorAll(".open-menu"),a=n.querySelectorAll(".menu-page"),i=n.querySelectorAll(".section"),c=n.querySelectorAll(".section-option-hotkeyInput[id]"),r=n.querySelector("#close-menu"),p=n.querySelectorAll("input[type='checkbox'][id]"),l=n.querySelectorAll("input[type='range'][id]"),m=n.querySelector("#version > span"),g=n.querySelectorAll(".input.autochat"),y=n.querySelector("#killMessage"),b=n.querySelector("#reset-settings"),w=n.querySelector("#download-settings"),v=n.querySelector("#upload-settings"),f=n.querySelector("#menuTransparency"),x=n.querySelectorAll("input[type='color'][id]"),L=()=>{for(const t of x){const e=t.previousElementSibling;if(e){const n=u[t.id];e.style.backgroundColor=n,e.onclick=()=>{t.value=n,h[t.id]=n,d.set("Dsync-settings",h)}}t.value=h[t.id],t.onchange=()=>{h[t.id]=t.value,d.set("Dsync-settings",h),t.blur()}}o.classList[h.menuTransparency?"add":"remove"]("transparent"),y.value=h.killMessage,y.onchange=()=>{h.killMessage=y.value,d.set("Dsync-settings",h),y.blur()};for(let t=0;t<g.length;t++){const e=g[t];e.value=h.autochatMessages[t]||"",e.onchange=()=>{h.autochatMessages[t]=e.value,d.set("Dsync-settings",h),e.blur()}}m.textContent="v"+It.version;for(const t of l){const e=t.nextElementSibling;t.value=h[t.id],e&&(e.textContent=t.value),t.oninput=()=>{const n=Number(t.value)%5;t.value-=n,e&&(e.textContent=t.value),h[t.id]=Number(t.value),d.set("Dsync-settings",h)}}for(const t of p)t.checked=h[t.id],t.onchange=()=>{h[t.id]=t.checked,d.set("Dsync-settings",h),t.blur()};It.toggleMenu=()=>{o.classList.toggle("close"),o.classList.toggle("open"),setTimeout((()=>{t.classList.toggle("iframe-opened")}),100)},r.onclick=It.toggleMenu;for(let t=0;t<s.length;t++)s[t].onclick=()=>{k(s,"active"),s[t].classList.add("active"),k(a,"opened"),a[t].classList.add("opened")};for(const t of i){const e=t.children[0],n=t.children[1];e&&n&&(D(t,"opened")?n.classList.add("opened"):(n.style.display="none",e.onclick=()=>{n.classList.contains("opened")?setTimeout((()=>{n.style.display="none"}),100):n.style.display="grid",setTimeout((()=>{n.classList.toggle("opened"),e.children[1].classList.toggle("rotate")}),0)}))}for(const t of c)try{t.textContent=E(h[t.id])}catch(e){throw new Error(t.id+" doesn't exist in settings")}M()};f.addEventListener("change",(()=>{o.classList[f.checked?"add":"remove"]("transparent")})),b.onclick=()=>{Object.assign(h,u),d.set("Dsync-settings",h),L()},w.onclick=()=>{((t,e)=>{const n=new Blob([JSON.stringify(t,null,4)],{type:"application/json "}),o=URL.createObjectURL(n),s=document.createElement("a");s.href=o,s.download=(e||"settings")+".txt",s.click(),s.remove(),URL.revokeObjectURL(o)})(h,"DsyncSettings"+It.version)},v.onchange=t=>pt(void 0,void 0,void 0,(function*(){const e=t.target,n=v.parentElement,o=n.children[1];n.classList.remove("red"),n.classList.remove("green");try{const t=yield e.files[0].text(),s=JSON.parse(t);if(!Object.keys(s).every((t=>u.hasOwnProperty(t))))throw new Error("Invalid settings");Object.assign(h,s),d.set("Dsync-settings",h),L(),n.classList.add("green"),o.innerHTML="SETTINGS LOADED SUCCESSFULLY"}catch(t){n.classList.add("red"),o.innerHTML="SETTINGS ARE NOT VALID, TRY ANOTHER"}}));const M=()=>{const t=new Map;for(const e of c){const n=h[e.id],[o,s]=t.get(n)||[0,[]];t.set(n,[(o||0)+1,[...s,e]]),e.classList.remove("red")}for(const e of t){const[t,n]=e[1];if(1!==t)for(const t of n)t.classList.add("red")}};It.active=null;const I=t=>{if(!It.active)return;const e="Backspace"===t?"...":E(t);h[It.active.id]="Backspace"===t?"...":t,It.active.textContent=e,d.set("Dsync-settings",h),It.active=null,M()};o.addEventListener("keyup",(t=>{t.keyCode<5||!It.active||I(t.code)})),o.addEventListener("mouseup",(t=>{const e=t.target;if(It.active)return I(t.button);D(e,"section-option-hotkeyInput")&&(e.textContent="Wait...",It.active=e)})),e.addEventListener("keydown",(t=>ct(t,t.code))),e.addEventListener("keyup",(t=>rt(t,t.code)));const T=()=>{const t=window.innerWidth,e=window.innerHeight,n=Math.min(1,Math.min(t/1024,e/700));o.style.transform=`translate(-50%, -50%) scale(${n})`};T(),window.addEventListener("resize",T),setTimeout((()=>t.classList.add("iframe-opened")),0),e.addEventListener("contextmenu",(t=>t.preventDefault())),e.addEventListener("mousedown",(t=>1===t.button&&t.preventDefault())),e.addEventListener("mouseup",(t=>[3,4].includes(t.button)&&t.preventDefault())),window.addEventListener("mouseup",(t=>[3,4].includes(t.button)&&t.preventDefault())),L()}};const dt=[{radix:2,prefix:"0b0*"},{radix:8,prefix:"0+"},{radix:10,prefix:""},{radix:16,prefix:"0x0*"}];var ut;!function(t){t[t.APPEND=0]="APPEND",t[t.PREPEND=1]="PREPEND"}(ut||(ut={}));var mt=class{constructor(t,e){this.code=t,this.COPY_CODE=t,this.unicode=e||!1,this.hooks={}}static parseValue(t){try{return Function(`return (${t})`)()}catch(t){return null}}isRegexp(t){return"regexp"===(t=>Object.prototype.toString.call(t).slice(8,-1).toLowerCase())(t)}generateNumberSystem(t){return`(?:${[...dt].map((({prefix:e,radix:n})=>e+t.toString(n))).join("|")})`}parseVariables(t){return t=(t=(t=t.replace(/\{VAR\}/g,"(?:let|var|const)")).replace(/\{QUOTE\}/g,"['\"`]")).replace(/ARGS\{(\d+)\}/g,((...t)=>{let e=Number(t[1]),n=[];for(;e--;)n.push("\\w+");return n.join("\\s*,\\s*")})),t=t.replace(/NUMBER\{(\d+)\}/g,((...t)=>{const e=Number(t[1]);return this.generateNumberSystem(e)}))}format(t,e,n){let o=null;Array.isArray(e)?o=e.map((t=>this.isRegexp(t)?t.source:t)).join("\\s*"):this.isRegexp(e)&&(o=e.source),o=this.parseVariables(o),this.unicode&&(o=o.replace(/\\w/g,"(?:[^\\x00-\\x7F-]|\\$|\\w)"));const s=new RegExp(o.replace(/\{INSERT\}/,""),n);if(null===this.code.match(s))throw new Error("Failed to find: "+t);return o.includes("{INSERT}")?new RegExp(o,n):s}template(t,e,n,o){const s=new RegExp(`(${this.format(e,n).source})`);this.code=this.code.replace(s,t===ut.APPEND?"$1"+o:o+"$1")}match(t,e,n,o=!1){const s=this.format(t,e,n),a=this.code.match(s);return this.hooks[t]={expression:s,match:a},o&&Mt(t,this.hooks[t]),a}matchAll(t,e,n,o=!1){const s=this.format(t,e,n),a=this.code.matchAll(s);return this.hooks[t]={expression:s,match:[...a]},o&&Mt(t,this.hooks[t]),a}replace(t,e,n,o){const s=this.format(t,e,o);this.code=this.code.replace(s,n)}append(t,e,n){this.template(ut.APPEND,t,e,n)}prepend(t,e,n){this.template(ut.PREPEND,t,e,n)}insert(t,e,n){const{source:o}=this.format(t,e);if(!o.includes("{INSERT}"))throw new Error("Your regexp must contain {INSERT} keyword");const s=new RegExp(o.replace(/^(.*)\{INSERT\}(.*)$/,"($1)($2)"));this.code=this.code.replace(s,`$1${n}$2`)}};let ht=0;var gt=e=>{const[n]=e;if(n===t.SPAWN&&h.lastHat&&F(It.actualHat,!0),n===t.DIED&&(U=0,$=!1,K=!1,W=!1,ht=0,h.autospawn&&B(void 0,void 0,void 0,(function*(){yield P(100);const t=document.querySelector("#play");t&&t.click()}))),n===t.KILLUPDATE&&(ht=e[1][0]),h.kill&&n===t.KILLED){const t=h.killMessage.length?h.killMessage:"{KILL}x",n=e[1].replace(/^Killed\s/,"").trim(),o=t.replace(/\{KILL\}/g,ht+"").replace(/\{NAME\}/g,n);It.chat(o)}};var yt=(t,e,n)=>{if(!h.itemCounter)return;const o=g(n),s=It.itemData[o][It.props.itemType],a=It.defaultData[It.props.currentCount][s],i=It.maxCount[s];if(0===i)return;const c=e[It.props.x]-10,r=e[It.props.y]+7,p=e.width;O(t,`${a}/${i}`,((t,e)=>[c+p-t,r+e]))};var bt=(t,e,n)=>{const o=I(t),s=It.myPlayerID();if(s===o.id&&(h.rainbow&&(It.hsl=(It.hsl+.8)%360),It.aimTarget)){const t=It.aimTarget[It.props.x],e=It.aimTarget[It.props.y];It.target[It.props.angle]=Math.atan2(e-o.y,t-o.x)}((t,e)=>{if(!h.drawHP)return;const{x:n,y:o,health:s,maxHealth:a,radius:i}=e;O(t,`HP ${s}/${a}`,((t,e)=>[n-t/2,o+i+e+55]))})(e,o),s!==o.id&&null!==It.myPlayer&&(h.enemyTracers&&0===o.type&&!n||h.teammateTracers&&0===o.type&&n||h.animalTracers&&0!==o.type)&&S(e,o,n)};var wt=()=>{let t=!0,e=0;const n=()=>{const{w:e,h:o,w2:s,h2:a}=It.scale,i=Math.abs(e[0]-s),c=Math.abs(o[0]-a);i<3||c<3?t=!0:(e[0]=H(e[0],s,.175),o[0]=H(o[0],a,.175),window.dispatchEvent(new Event("resize")),setTimeout(n,0))};window.addEventListener("wheel",(o=>{if(!(o.target instanceof HTMLCanvasElement)||o.ctrlKey||o.shiftKey||o.altKey||L()||!M())return;const s=It.scale,{w:a,h:i,w2:c,h2:r}=s;if(1824===c&&1026===r&&0!=(e=(e+1)%5))return;const p=o.deltaY>0?-150:150;s.w2=Math.max(924,c+p),s.h2=Math.max(126,r+p),h.smoothZoom?t&&(t=!1,n()):(a[0]=s.w2,i[0]=s.h2,window.dispatchEvent(new Event("resize")))}))};var vt=(t,e,n,o)=>{const s=t[It.props.itemOwner];if(0===s)return;const a=A(t,s);null!==a&&C(n,a)};let ft=!1,xt=!1,kt=!1,Et=100;var Dt=t=>{if(It.myPlayerID()!==t[It.props.id])return;const n=I(t);if(It.myPlayer=Object.assign(Object.assign({},It.myPlayer),n),It.myPlayer.hat=t[It.props.hat],It.myPlayer.isClown=128===n.playerValue,It.myPlayer.ownerID=t[It.props.itemOwner],h.skipUpgrades){const t=It.defaultData[It.props.upgradeBar];1===t.length&&It.upgradeItem(t[0])}const{x2:s,y2:a,health:i,maxHealth:c,isClown:r,hat:p,oldHat:l}=It.myPlayer,d=a>8075&&a<8925,u=!(a>8e3&&a<9e3);h.autoScuba&&d&&!kt&&(kt=!0,It.myPlayer.oldHat=p,F(o.SCUBA,!1,!1)),kt&&u&&(F(l),kt=!1);const m=It.entityList()[39],g=!!m.length&&m.some((t=>{const e=It.entityData[39][It.props.radius],n=It.entityData[0][It.props.radius],o=t[It.props.x2],i=t[It.props.y2];return R(s,a,o,i)<e+n})),y=Math.abs(i-Et),b=It.defaultData[It.props.itemBar].includes(12)?35:20;h.autoheal&&i<c-(g?b-5:10)&&!r&&!ft&&(y>2||0===y)&&(Et=i,ft=!0,setTimeout((()=>{X(e.HEAL),ft=!1}),h.autohealDelay)),h.jungleOnClown&&r&&p!==o.JUNGLE&&!xt&&(xt=!0,It.myPlayer.oldHat=at?ot:p,F(o.JUNGLE,!1,!1)),!r&&xt&&(F(l),xt=!1),h.autochat&&B(void 0,void 0,void 0,(function*(){if(V||L()||!M())return;V=!0;const t=h.autochatMessages.filter((t=>t.length));t.length&&(It.chat(t[Y++]),Y%=t.length,yield P(2e3),V=!1)}))};var Lt=(t,e)=>{const n=It.entityList();for(let e=0;e<It.itemList.length;e++){const o=It.itemList[e];for(let e=0;e<n[o].length;e++){const s=n[o][e],a=s[It.props.itemOwner];if(0===a)continue;const i=A(s,a);if(null===i)continue;const c=s[It.props.x],r=s[It.props.y];t.save(),t.translate(c+s.dirX,r+s.dirY),C(t,i),t.restore()}}};const Mt=console.log;window.log=Mt,window.Dsync={props:{},hooks:{},settings:h,myPlayer:null,target:null,hsl:0,version:"1.0.5",actualHat:0,scale:{w:N(1824),h:N(1026),w2:1824,h2:1026},itemList:[],mousemove:!0,aimTarget:null};const It=window.Dsync;d.delete("_adIds"),window.eval=new Proxy(window.eval,{apply(t,e,n){const o=n[0];if(o.length>1e5&&!(()=>{try{return!/DEV/.test(GM_info.script.name)}catch(t){return!1}})()){const s=new mt(o,!0),a=(t,e,n="")=>{s.prepend(t,["function",e],`Dsync.${t}=${e};`+n)};window.COPY_CODE=s.COPY_CODE.match(/^\((.+)\)\(.+\);$/)[1],s.append("EXTERNAL fix",[/\(function/,/(\w+)/,/\(/,/\w+/,/\)/,/\{/],"EXTERNAL.__proto__.toString=()=>COPY_CODE;"),s.replace("Debugger fix",[/debugger/],"","g");a("selectItem",s.match("selectItem",[/!/,/\w+/,/\[/,/\w+/,/\]/,/&&/,/(\w+)/,/\(/,/\d/,/\)/,/,/])[1]);a("equipHat",s.match("equipHat",[/!/,/\w+/,/\)/,/return/,/;/,/(\w+)/,/\(/,/\w+/,/\)/])[1]);a("chat",s.match("chat",[/break/,/\}/,/(\w+)/,/\(/,/\w+/,/\)/])[1]);const[,i,c]=s.match("attack",[/&&/,/(\w+)/,/\(/,/(\w+)/,/\(/,/\)/,/\)/,/,/]);a("attack",i),a("getAngle",c);a("stopAttack",s.match("stopAttack",[/&&/,/(\w+)/,/\(/,/\)/,/,/])[1]);a("autoattack",s.match("autoattack",[/,/,/(\w+)/,/\(/,/\w+/,/\)/,/\)/,/\)/])[1]);a("move",s.match("move",[/&&/,/\(/,/(\w+)/,/\(/,/\w+/,/\)/])[1]);a("createClan",s.match("createClan",[/,/,/\w+/,/=>/,/\{/,/(\w+)/,/\(/,/\w+/])[1]);a("leaveClan",s.match("leaveClan",[/=>/,/\{/,/(\w+)/,/\(/,/\)/,/\}/])[1]);a("kickUser",s.match("kickUser",[/return/,/;/,/(\w+)/,/\(/,/\w+/,/\)/,/\}/,/:/])[1]);a("joinClan",s.match("joinClan",[/(\w+)/,/\(/,/\w+/,/\)/,/\}/,/\}/,/\)/,/\}/,/\}/])[1]);a("changeAngle",s.match("changeAngle",[/\w+/,/\(/,/\w+/,/\)/,/\}/,/function/,/\w+/,/\(/,/\w+/,/\)/,/\{/,/(\w+)/,/\(/,/\w+/,/\)/,/,/])[1]),s.append("mousedown",[/&&/,/\w+/,/\>/,/\w+/,/\)/,/return/,/;/,"(.+?=",/(\w+)/,".+?),","!(\\w+",/\(/,/\w+/,/,/,/\w+/,"\\)).+?",/\}/],"Dsync.mousedown=($3)=>{$2;return $4;};"),s.append("mouseup",[/!\w+\.\w+/,/\)/,/return/,/;/,"(\\w+",/=/,/(\w+).+?\w+/,/\(/,/\w+/,/,/,/\w+/,"\\))",/\}/],"Dsync.mouseup=($3)=>{$2};");const[,r,p]=s.match("lockRotation",[/\[/,/\w+/,/\]/,/&&/,/(\w+)/,/\(/,/!(\w+)/,/\)/,/,/]);s.prepend("lockRotation",["function",`${r}`],`Dsync.toggleRotation=()=>{${p}=!${p};};`);const l=s.match("toggleChat",[/return/,"(\\w+",/&&/,/\w+/,/\(/,/!\[/,/\]/,/\)/,",.+?),\\w+\\."])[1];s.insert("toggleChat",[/null/,/\}/,/\)/,/\)/,/;/,/{INSERT}/,/{VAR}/,/\w+/,/=/],`Dsync.toggleChat=()=>{${l}};`);const[,d,u,m]=s.match("selectByID",[/(\w+)/,/\(/,/(\w+)\.(\w+)/,/\[/,/Number/]);a("selectByID",d,`Dsync.defaultData=${u};`),It.props.itemBar=m,s.append("drawEntityInfo",[/function/,/\w+/,/\(/,/ARGS{3}/,/\)/,/\{/,/{VAR}/,/\w+/,/=/,/\w+/,/\[/,/\w+/,/\(/,/\).+?\.5;/],"Dsync.hooks.drawEntityInfo(...arguments);");const[,h,g,y]=s.match("positionX",[/\(\w+\.(\w+)/,/=/,/\w+\.(\w+)/,/\+/,/\(\w+\.(\w+)/]);It.props.x=h,It.props.x1=g,It.props.x2=y;const[,b,w,v]=s.match("positionY",[/,\w+\.(\w+)/,/=/,/\w+\.(\w+)/,/\+/,/\(\w+\.(\w+)/]);It.props.y=b,It.props.y1=w,It.props.y2=v;const[,f,x,k]=s.match("angle",[/\w+\.(\w+)/,/=/,/\w+\.(\w+)/,/=/,/\w+\.(\w+)/,/=/,/\w+/,/,/,/\w+\.\w+/,/=/,/\w+/,/,/]);It.props.angle=f,It.props.angle1=x,It.props.angle2=k;const E=s.match("id",[/-NUMBER{1}/,/!==/,/\w+\.(\w+)/,/&&/])[1];It.props.id=E;const D=s.match("health",[/(\w+)/,/\//,/NUMBER{255}/,/\*/])[1];It.props.health=D;const L=s.match("maxHealth",[/\w+/,/:/,/NUMBER{35}/,/,/,/(\w+)/,/:/,/NUMBER{100}/])[1];It.props.maxHealth=L;const M=s.match("hat",[/\w+/,/\(/,/\)/,/\[/,/\w+/,/\./,/(\w+)/,/\]/,/;/,/if/])[1];It.props.hat=M;const I=s.match("playerValue",[/if/,/\(/,/!/,/\(/,/\w+/,/\./,/(\w+)/,/&/,/\w+/,/\(/,/\)/])[1];It.props.playerValue=I;const[,T,A]=s.match("itemType",[/(\w+)/,/\(/,/\)/,/\[/,/\w+/,/\]/,/\./,/(\w+)/,/;/]);It.props.itemType=A,s.prepend("myPlayerID",[/function/,/\w+/,/\(/,/\)/,/\{/,/return/,/\w+/,/!==/,/(\w+)/],"Dsync.myPlayerID=()=>$2;");const C=s.match("entityList",[/new/,/Map/,/,/,/(\w+)/,/=/,/\[/,/\]/,/;/])[1],[,R,S]=s.match("entityData",/(\w+)\(\)\[\w+\.\w+\]\.(\w+)/);s.prepend("entityData",[/function/,/\w+/,/\(/,/ARGS{2}/,/\)/,/\{/,/{VAR}/,/\w+/,/,/],`Dsync.entityData=${R}();Dsync.itemData=${T}();Dsync.entityList=()=>${C};`),It.props.radius=S,s.insert("showHoods1",[/\w+/,/\(/,/\)/,/\./,/\w+/,/{INSERT}/,/\)/,/continue/,/;/],"&&!Dsync.settings.showHoods"),s.insert("showHoods2",[/\w+\.\w+/,/===/,/\w+/,/{INSERT}/,/\)/,/\{/],"||Dsync.settings.showHoods"),s.insert("websocketString",[/;/,/{INSERT}/,/switch/,/\(/,/(\w+)/,/\[/,/NUMBER{0}/,/\]/,/\)/,/\{/],"Dsync.hooks.stringMessage($3);"),s.replace("zoomWidth",[/(\w+)/,/:/,/NUMBER{1824}/,/,/],"$1:Dsync.scale.w,"),s.replace("zoomHeight",[/(\w+)/,/:/,/NUMBER{1026}/,/,/],"$1:Dsync.scale.h,"),s.append("itemCounter",[/(\w+)/,/\]/,/,/,/(\w+)/,/\./,/\w+/,/\(/,/(\w+)/,/\)/,/,/],"Dsync.hooks.drawItemBar($4,$3,$2),"),s.append("maxCount",["(\\w+","\\.","\\w+)",/=/,/\[/,/ARGS{11}/,/\]/,/,/],"Dsync.maxCount=$2;");const O=s.match("currentCount",[/(\w+)/,/:/,/\[/,/ARGS{11}/,/\]/,/,/])[1];It.props.currentCount=O;const[,P,N]=s.match("upgradeList",[/&&/,/\(/,/(\w+)/,/\(/,/\w+/,/\./,/(\w+)/,/\[/,/\w+/,/\]/,/\),/]);It.props.upgradeBar=N,a("upgradeItem",P),s.replace("ping",["({VAR}",/(\w+)/,/=/,/\w+/,/\[/,/NUMBER{1}/,/\]/,/\|/,/\w+/,/\[/,/NUMBER{2}/,/\]/,/<</,/NUMBER{8}/,";)",/(?!{VAR})(\w+)/],"$1Dsync.ping=$2;$3");const H=s.match("clan",[/===/,/\w+/,/\./,/(\w+)/,/\)/,/\)/])[1];It.props.clan=H;const B=s.match("itemOwner",[/\!/,/\(/,/\w+/,/\./,/(\w+)/,/===/])[1];It.props.itemOwner=B;const U=s.match("byteLength",[/NUMBER{3}/,/;/,/\w+/,/</,/(\w+)/])[1];s.append("JoinCreateClan",[/,/,/\w+/,/=/,/(\w+)/,/\[/,/NUMBER{2}/,/\]/,/;/],`Dsync.hooks.UpdateClanList([...$2.slice(3,${U})]);`),s.append("UpdateClanList",[/(\w+)/,/\[/,/NUMBER{1}/,/\]/,/;/,/\w+/,/\(/,/\)/,/\./,/\w+/,/\(/,/\w+/,/\)/,/;/],`Dsync.hooks.UpdateClanList([...$2.slice(2,${U})]);`),s.append("DeleteClan",[/{QUOTE}none{QUOTE}/,/,/,/\w+/,/=/,/null/,/,/],"Dsync.hooks.DeleteClan(),"),s.append("drawItem",[/\)/,/;/,/const/,/\w+/,/=/,/\w+/,/\[/,/(?!\d+)\w+/,/\]/,/;.+?\)/,/,/],"(Dsync.settings.markersBottom&&Dsync.hooks.drawItems(...arguments)),"),s.append("bounceProps",[/(\w+)\.\w+/,/\+/,/(\w+)/,/,/,/\w+\.\w+/,/\+/,/(\w+)/,/\),/],"$2.dirX=$3,$2.dirY=$4,");const[,$,K]=s.match("scythe",[/\w+/,/&&/,/(\w+)/,/\(/,/(\w+)/,/\)/,/,/]);a("upgradeScythe",$,`Dsync.goldenCowID=()=>${K};`);const W=s.match("itemDamage",[/(\w+)/,/:/,/46\.5/,/,/])[1];It.props.itemDamage=W;const q=s.match("itemDataType",[/\w+/,/\./,/(\w+)/,/===/,/NUMBER{2}/])[1];It.props.itemDataType=q,s.append("updatePlayer",[/\(/,/ARGS{16}/,/\).+?/,/(\w+)/,/\./,/\w+/,/=/,/NUMBER{0}/],";Dsync.hooks.updatePlayer($2);"),s.append("createEntity",[/(\w+)/,/\./,/\w+/,/=/,/NUMBER{0}/,/;/,/break/,/;/,/default/,/:/,/break/,/\}/],"if (Dsync.myPlayerID() === $2[Dsync.props.id]){Dsync.target=$2;}"),s.replace("renderLayers",["(function",/\w+/,/\(/,/ARGS{2}/,/\)/,/\{/,/{VAR}/,/\w+/,/,/,/\w+/,/=.+?,/,/ARGS{2}/,"\\))",/\}/],"$1;if(Dsync.itemList&&Dsync.hooks.renderLayers&&!Dsync.settings.markersBottom){Dsync.hooks.renderLayers(...arguments);}}"),s.replace("mousemove",["(const",/\w+/,/=/,/\w+/,/\(/,/\)/,/;.+?&&/,/\w+/,/\(/,/\w+/,"\\))"],"if(Dsync.mousemove){$1}");const j=s.match("renderLayer",[/:/,/NUMBER{38}/,/,/,/(\w+)/,/:/,/\w+/,/\./,/\w+/,/,/])[1];It.props.renderLayer=j;const G=s.match("currentItem",[/,/,/\w+/,/\./,/(\w+)/,/===/])[1];return It.props.currentItem=G,n[0]=s.code,window.eval=t,t.apply(e,n),void Tt()}return t.apply(e,n)}});const Tt=()=>{const t=document.querySelector("#game-canvas"),e=document.querySelector("#grid-toggle"),n=document.querySelector("#display-ping-toggle"),o=document.querySelector("#native-helper-toggle"),s=document.querySelector("#hat_menu_content");e.checked&&e.click(),n.checked||n.click(),o.checked&&o.click(),new MutationObserver((t=>{if(M()&&!L())for(let e=0;e<t.length;e++)if("UNEQUIP"===t[e].target.textContent){It.actualHat=e+1;break}})).observe(s,{childList:!0,subtree:!0}),lt(),window.onkeydown=null,window.onkeyup=null,t.onmousedown=null,t.onmouseup=null,window.addEventListener("keydown",(t=>ct(t,t.code))),window.addEventListener("keyup",(t=>rt(t,t.code))),t.addEventListener("mousedown",(t=>ct(t,t.button))),t.addEventListener("mouseup",(t=>rt(t,t.button))),It.hooks.drawEntityInfo=bt,It.hooks.stringMessage=gt,It.hooks.drawItemBar=yt,It.hooks.drawItems=vt,It.hooks.UpdateClanList=p,It.hooks.DeleteClan=l,It.hooks.updatePlayer=Dt,It.hooks.renderLayers=Lt,It.itemList=It.itemData.filter((t=>t[It.props.itemDataType]===a.PLACEABLE)).map((t=>t[It.props.renderLayer])),wt()}}();