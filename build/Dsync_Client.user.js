!function(){"use strict";var t,e,n,o={d:function(t,e){for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}};o.d({},{s:function(){return O},c:function(){return $}}),function(t){t[t.PRIMARY=0]="PRIMARY",t[t.SECONDARY=1]="SECONDARY",t[t.HEAL=2]="HEAL",t[t.WALL=3]="WALL",t[t.SPIKE=4]="SPIKE",t[t.WINDMILL=5]="WINDMILL",t[t.TREE=6]="TREE",t[t.TRAP=7]="TRAP",t[t.PLATFORM=8]="PLATFORM",t[t.SPAWN=9]="SPAWN",t[t.TURRET=10]="TURRET"}(t||(t={})),function(t){t[t.BUSH=1]="BUSH",t[t.BERSERKER=2]="BERSERKER",t[t.JUNGLE=3]="JUNGLE",t[t.CRYSTAL=4]="CRYSTAL",t[t.SPIKEGEAR=5]="SPIKEGEAR",t[t.IMMUNITY=6]="IMMUNITY",t[t.BOOST=7]="BOOST",t[t.APPLEHAT=8]="APPLEHAT",t[t.SCUBA=9]="SCUBA",t[t.HOOD=10]="HOOD",t[t.DEMOLIST=11]="DEMOLIST"}(e||(e={})),function(t){t[t.APPLE=10]="APPLE",t[t.COOKIE=12]="COOKIE"}(n||(n={}));const s={get(t){const e=localStorage.getItem(t);return null===e?null:JSON.parse(e)},set(t,e){localStorage.setItem(t,JSON.stringify(e))}},i=(()=>{const t={primary:"Digit1",secondary:"Digit2",heal:"KeyQ",wall:"Digit4",spike:"KeyR",windmill:"Digit6",trap:"KeyF",turret:"KeyG",tree:"KeyT",platform:"KeyC",spawn:"KeyV",up:"KeyW",left:"KeyA",down:"KeyS",right:"KeyD",attack:0,autoattack:"KeyE",lockRotation:"KeyX",openChat:"Enter",invisibleHit:2,spikeInsta:1,toggleMenu:"Escape",bush:"...",berserker:"...",jungle:"...",crystal:"...",spikegear:"...",immunity:4,boost:3,applehat:"...",scuba:"...",hood:"...",demolist:"...",autoheal:!0,autohealDelay:95,jungleOnClown:!0,lastHat:!0,autoScuba:!0,enemyTracers:!0,teammateTracers:!0,animalTracers:!0,enemyColor:"#cc5151",teammateColor:"#8ecc51",animalColor:"#518ccc",arrows:!0,rainbow:!1,drawHP:!0,showHoods:!0,autospawn:!1};return t})(),a=Object.assign(Object.assign({},i),s.get("Dsync-settings"));for(const t in a)i.hasOwnProperty(t)||delete a[t];s.set("Dsync-settings",a);var c=a;const p=(t,e)=>{if(t instanceof HTMLElement)t.classList.remove(e);else for(const n of t)n.classList.remove(e)},l=t=>{if("0"===(t=t.toString()))return"LBTN";if("1"===t)return"MBTN";if("2"===t)return"RBTN";if("3"===t)return"XBTN2";if("4"===t)return"XBTN1";if("Escape"===t)return"ESC";if("BracketLeft"===t)return"[";if("BracketRight"===t)return"]";if("NumpadDivide"===t)return"NUMDIV";if("NumpadMultiply"===t)return"NUMMULT";if("NumpadSubtract"===t)return"NUMSUB";if("NumpadDecimal"===t)return"NUMDEC";if("CapsLock"===t)return"CAPS";if("PrintScreen"===t)return"PRNT";if("Backslash"===t)return"\\";const e=/^(?:Numpad|Digit|Arrow|Key)(\w+)$/;e.test(t)&&(t=t.replace(e,"$1").replace(/Numpad/,"NUM"));const n=/^(Control|Shift|Alt)(.)/;return n.test(t)&&(t=t.replace(n,"$2$1").replace(/Control/,"CTRL")),t.toUpperCase()},r=(t,e)=>t.classList.contains(e),d=()=>{const t=document.activeElement;return["TEXTAREA","INPUT"].includes(t.tagName)},u=t=>{const e=(t=>({id:t[O.props.id],type:t.type,x:t[O.props.x],y:t[O.props.y],x1:t[O.props.x1],y1:t[O.props.y1],x2:t[O.props.x2],y2:t[O.props.y2],health:t[O.props.health],playerValue:t[O.props.playerValue]}))(t),n=O.entityData[e.type],o=n[O.props.radius],s=n[O.props.maxHealth],i=Math.ceil(e.health/255*s);return Object.assign(Object.assign({},e),{health:i,maxHealth:s,radius:o})},h=(t,e,n)=>{const{x:o,y:s}=O.myPlayer,{x:i,y:a}=e,p=c.rainbow?`hsl(${O.hsl}, 100%, 50%)`:((t,e)=>t.id===O.myPlayerID()||e?c.teammateColor:0!==t.type?c.animalColor:c.enemyColor)(e,n);if(c.arrows){const e=Math.atan2(a-s,i-o);((t,e,n,o,s,i)=>{t.save(),t.translate(n,o),t.rotate(Math.PI/4),t.rotate(s),t.globalAlpha=.75,t.strokeStyle=i,t.lineCap="round",t.lineWidth=8,t.beginPath(),t.moveTo(-e,-e),t.lineTo(e,-e),t.lineTo(e,e),t.stroke(),t.closePath(),t.restore()})(t,10,o+95*Math.cos(e),s+95*Math.sin(e),e,p)}else((t,e,n,o,s,i)=>{t.save(),t.globalAlpha=.75,t.strokeStyle=i,t.lineCap="round",t.lineWidth=5,t.beginPath(),t.moveTo(e,n),t.lineTo(o,s),t.stroke(),t.restore()})(t,o,s,i,a,p)};let m=0,w=!1,g=!1,v=!1,b=null;const y=new Map,f=[],x=(t,e=!1)=>{const{hat:n}=O.myPlayer;(n!==t||e)&&f.push(t)},k=()=>{O.selectByIndex(Number(v))},E=()=>O.attack(O.getAngle()),I=t=>{O.selectItem(t),E(),O.stopAttack(),k(),w&&E()},A=()=>{null!==b&&(I(b),setTimeout(A,0))},R=(t,e)=>{y.set(e,t),b=t,1===y.size&&A()},S=(n,o)=>{if("Space"!==o||d()||n.preventDefault(),n instanceof KeyboardEvent&&n.repeat)return;if(O.active)return;if(o!==c.toggleMenu||d()||O.toggleMenu(),!(()=>{const t=document.querySelector("#homepage");return t&&"none"===t.style.display})())return;if(o===c.openChat&&(d()||n.preventDefault(),O.toggleChat()),d())return;o===c.primary&&(v=!1,k()),o===c.secondary&&(v=!0,k()),o===c.wall&&R(t.WALL,o),o===c.spike&&R(t.SPIKE,o),o===c.windmill&&R(t.WINDMILL,o),o===c.trap&&R(t.TRAP,o),o===c.turret&&R(t.TURRET,o),o===c.tree&&R(t.TREE,o),o===c.platform&&R(t.PLATFORM,o),o===c.spawn&&R(t.SPAWN,o),o===c.bush&&x(e.BUSH),o===c.berserker&&x(e.BERSERKER),o===c.jungle&&x(e.JUNGLE),o===c.crystal&&x(e.CRYSTAL),o===c.spikegear&&x(e.SPIKEGEAR),o===c.immunity&&x(e.IMMUNITY),o===c.boost&&x(e.BOOST),o===c.applehat&&x(e.APPLEHAT),o===c.scuba&&x(e.SCUBA),o===c.hood&&x(e.HOOD),o===c.demolist&&x(e.DEMOLIST),o===c.invisibleHit&&(v=!v,k(),E(),O.stopAttack(),v=!v,k()),o===c.spikeInsta&&(()=>{const n=v;v=!1,x(e.BERSERKER),k(),I(t.SPIKE),E(),O.stopAttack(),v=n,k()})();const s=m;if(o===c.up&&(m|=1),o===c.left&&(m|=4),o===c.down&&(m|=2),o===c.right&&(m|=8),s!==m&&O.move(m),n instanceof MouseEvent&&o===c.attack){!O.mousedown(n)&&(w=!0,O.attack(O.getAngle()))}o===c.autoattack&&(g=!g,O.autoattack(g)),o===c.lockRotation&&O.toggleRotation()},D=(t,e)=>{const n=m;if(e===c.up&&(m&=-2),e===c.left&&(m&=-5),e===c.down&&(m&=-3),e===c.right&&(m&=-9),n!==m&&O.move(m),t instanceof MouseEvent&&e===c.attack&&(O.mouseup(t),w=!1),null!==b&&y.delete(e)){const t=[...y];b=t.length?t[t.length-1][1]:null}};var L=t=>{const e=window.innerWidth,n=window.innerHeight,o=Math.min(e/1024,n/700);t.style.transform=`translate(-50%, -50%) scale(${o})`};var T=()=>{const t=document.createElement("iframe"),e=new Blob(['\n        <style>@import"https://fonts.googleapis.com/css2?family=Lato:wght@400;700;900&display=swap";header{background:#2f2f31;color:#76689a;padding:5px 10px;display:flex;justify-content:flex-start;align-items:center}header #version{align-self:flex-end;color:#9787bd;font-size:.5em;font-weight:600;margin-left:10px}header #version svg{fill:#9787bd}header .icon{margin-left:auto;width:35px;height:35px;fill:#cebcb4;transition:fill 100ms;cursor:pointer}header .icon:hover{fill:#ffe7dc}#navbar-container{display:flex;flex-direction:column;padding:10px;margin-right:10px;background:#2f2f31}#navbar-container .open-menu{outline:none;border:none;font-family:"Lato",sans-serif;font-weight:900;font-size:1.4rem;padding:10px;cursor:pointer;background:#313135;color:#ffe7dc;border-right:1px solid;border-right-color:rgba(0,0,0,0);transition:background 100ms,color 100ms,border-right-color 100ms}#navbar-container .open-menu:hover{background:#313135}#navbar-container .open-menu:active{background:#ffe7dc;color:#313135}#navbar-container .open-menu.active{pointer-events:none;background:#313135;border-right-color:#ffe7dc}#navbar-container .bottom-align{margin-bottom:0px;margin-top:auto !important}@keyframes appear{from{opacity:0}to{opacity:1}}@keyframes disappear{from{opacity:1}to{opacity:0}}.menu-page{display:none;background:#2f2f31;padding:10px;padding-top:0px}.menu-page.opened{display:block;animation:appear 300ms forwards}.menu-page h1{color:#76689a;font-size:1.5em;font-weight:900}.menu-page h2{color:#9494b8;font-size:1em;font-weight:900}.menu-page p{color:#675a86;font-size:.5em;font-weight:700}.menu-page .section{background:#36363d;border-radius:5px;margin:20px 0}.menu-page .section:last-child{margin-bottom:0px}.menu-page .section .section-title{display:flex;justify-content:space-between;align-items:center;padding:10px}.menu-page .section .section-title .icon{width:25px;height:25px;margin-right:10px;fill:#cebcb4;transition:fill 100ms,transform 100ms}.menu-page .section .section-title .icon.rotate{transform:rotate(90deg);fill:#ffe7dc}.menu-page .section .section-title:hover .icon{fill:#ffe7dc}.menu-page .section:not(.opened) .section-title{cursor:pointer}.menu-page .section .section-content{padding:10px;padding-top:0px;overflow:hidden;display:grid;grid-template-columns:1fr 1fr;transition:max-height 250ms cubic-bezier(0, 1, 0, 1);max-height:0px}.menu-page .section .section-content.opened{transition:max-height 250ms ease-out;max-height:100%}.menu-page .section .section-content .split{grid-column:1/3;margin-top:10px;background:#40404a;height:2px}.menu-page .section .section-content .section-option{display:flex;justify-content:space-between;align-items:center;margin-top:10px}.menu-page .section .section-content .section-option .section-option-title{color:#6a6a81;font-size:.8em}.menu-page .section .section-content .section-option .section-option-hotkeyInput{margin-right:50px;cursor:pointer;font-family:"Lato",sans-serif;font-weight:900;font-size:.6em;padding-bottom:8px;outline:none;border:none;text-align:center;width:80px;height:35px;border-radius:7.5px;background:#7d7d9b;color:#adadd8;box-shadow:0px -6px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .switch-checkbox{position:relative;width:70px;height:25px;margin-right:25px}.menu-page .section .section-content .section-option .switch-checkbox input{width:0;height:0;opacity:0}.menu-page .section .section-content .section-option .switch-checkbox input:checked+span{background:#7d7d9b;box-shadow:0px 5px 0px 0px #68687c inset}.menu-page .section .section-content .section-option .switch-checkbox input:checked+span:before{background:#ffe7dc;transform:translateX(42px)}.menu-page .section .section-content .section-option .switch-checkbox span{position:absolute;cursor:pointer;top:0;left:0;bottom:0;right:0;width:100%;height:100%;display:flex;align-items:center;background:#5f5f79;box-shadow:0px 5px 0px 0px #4d4d5f inset;border-radius:10px;transition:all 100ms ease-in-out}.menu-page .section .section-content .section-option .switch-checkbox span:before{position:absolute;content:"";width:28px;height:28px;border-radius:50%;background:#f0dcd3;box-shadow:0px -5px 0px 0px #cebcb4 inset;border:2px solid #adadd8;transition:all 100ms ease-in-out}.menu-page .section .section-content .section-option .slider{position:relative;margin-right:45px}.menu-page .section .section-content .section-option .slider .slider-value{position:absolute;margin-left:5px;color:#6a6a81;font-size:.65em}.menu-page .section .section-content .section-option .slider input{-webkit-appearance:none;outline:none;width:154px;height:20.8333333333px;background:#7d7d9b;box-shadow:0px 5px 0px 0px #68687c inset;border-radius:10px}.menu-page .section .section-content .section-option .slider input::-webkit-slider-thumb{-webkit-appearance:none;cursor:pointer;width:28px;height:28px;border-radius:50%;background:#ffe7dc;box-shadow:0px -5px 0px 0px #cebcb4 inset;border:2px solid #adadd8}@keyframes appear{from{opacity:0}to{opacity:1}}@keyframes disappear{from{opacity:1}to{opacity:0}}html,body{margin:0;padding:0}h1,h2,h3,h4,p{margin:0}#menu-container{font-family:"Lato",sans-serif;font-weight:900;font-size:2rem;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);width:1024px;height:700px;display:flex;justify-content:center;align-items:center;user-select:none}#menu-container.open{animation:appear 100ms forwards}#menu-container.close{animation:disappear 100ms forwards}#menu-wrapper{display:flex;flex-direction:column;width:100%;height:80%;background:#2b2b2c;border-radius:5px;padding:10px}main{display:flex;justify-content:space-between;margin-top:10px;height:100%}main #menu-page-container{width:100%;height:500px;overflow-y:scroll}.tooltip{position:relative;margin-left:5px;color:#8181a0}.tooltip:hover{cursor:pointer}.tooltip:hover .tooltip-text{visibility:visible}.tooltip .tooltip-text{position:absolute;visibility:hidden;text-align:center;z-index:150;bottom:100%;left:50%;transform:translateX(-50%);background-color:#7d7d9b;color:#ffe7dc;width:200px;font-size:14px;font-weight:600;padding:5px;border-radius:5px;border:3px solid #5f5f79}</style>\n        <div id="menu-container" class="open">\n            <div id="menu-wrapper">\n                <header> <span>Dsync Client</span> <div id="version"> <svg width="15" height="15" viewBox="0 0 16 16" version="1.1"> <path d="M11.75 2.5a.75.75 0 100 1.5.75.75 0 000-1.5zm-2.25.75a2.25 2.25 0 113 2.122V6A2.5 2.5 0 0110 8.5H6a1 1 0 00-1 1v1.128a2.251 2.251 0 11-1.5 0V5.372a2.25 2.25 0 111.5 0v1.836A2.492 2.492 0 016 7h4a1 1 0 001-1v-.628A2.25 2.25 0 019.5 3.25zM4.25 12a.75.75 0 100 1.5.75.75 0 000-1.5zM3.5 3.25a.75.75 0 111.5 0 .75.75 0 01-1.5 0z"></path> </svg> <span></span> </div> <svg id="close-menu" class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30" width="30px" height="30px"> <path d="M 7 4 C 6.744125 4 6.4879687 4.0974687 6.2929688 4.2929688 L 4.2929688 6.2929688 C 3.9019687 6.6839688 3.9019687 7.3170313 4.2929688 7.7070312 L 11.585938 15 L 4.2929688 22.292969 C 3.9019687 22.683969 3.9019687 23.317031 4.2929688 23.707031 L 6.2929688 25.707031 C 6.6839688 26.098031 7.3170313 26.098031 7.7070312 25.707031 L 15 18.414062 L 22.292969 25.707031 C 22.682969 26.098031 23.317031 26.098031 23.707031 25.707031 L 25.707031 23.707031 C 26.098031 23.316031 26.098031 22.682969 25.707031 22.292969 L 18.414062 15 L 25.707031 7.7070312 C 26.098031 7.3170312 26.098031 6.6829688 25.707031 6.2929688 L 23.707031 4.2929688 C 23.316031 3.9019687 22.682969 3.9019687 22.292969 4.2929688 L 15 11.585938 L 7.7070312 4.2929688 C 7.5115312 4.0974687 7.255875 4 7 4 z"/> </svg> </header>\n\n                <main>\n                    <aside id="navbar-container"> <button class="open-menu active">Keybinds</button> <button class="open-menu">Combat</button> <button class="open-menu">Visuals</button> <button class="open-menu">Misc</button> <button class="open-menu">Appearance</button> <button class="open-menu">Other</button> <button class="open-menu bottom-align">Credits</button> </aside>\n\n                    <div id="menu-page-container">\n                        <div class="menu-page opened"> <h1>Keybinds</h1> <p>Setup keybinds for items, weapons and hats</p> <div class="section"> <div class="section-title"> <h2>Items & Weapons</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Primary</span> <button id="primary" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Secondary</span> <button id="secondary" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Heal</span> <button id="heal" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Wall</span> <button id="wall" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Spike</span> <button id="spike" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Windmill</span> <button id="windmill" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Trap/Boost</span> <button id="trap" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Turret</span> <button id="turret" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Tree/Stone</span> <button id="tree" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Platform</span> <button id="platform" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Cosy bed</span> <button id="spawn" class="section-option-hotkeyInput"></button> </div> </div> </div> <div class="section"> <div class="section-title"> <h2>Controls & Movement</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Up</span> <button id="up" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Left</span> <button id="left" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Down</span> <button id="down" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Right</span> <button id="right" class="section-option-hotkeyInput"></button> </div> <div class="split"></div> <div class="section-option"> <span class="section-option-title">Attack</span> <button id="attack" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Auto attack</span> <button id="autoattack" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Lock rotation</span> <button id="lockRotation" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Open chat</span> <button id="openChat" class="section-option-hotkeyInput"></button> </div> <div class="split"></div> <div class="section-option"> <span class="section-option-title">Invisible hit</span> <button id="invisibleHit" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Spike insta</span> <button id="spikeInsta" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Toggle Dsync Menu</span> <button id="toggleMenu" class="section-option-hotkeyInput"></button> </div> </div> </div> <div class="section"> <div class="section-title"> <h2>Hats</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Bush hat</span> <button id="bush" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Berserker</span> <button id="berserker" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Jungle gear</span> <button id="jungle" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Crystal gear</span> <button id="crystal" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Spike gear</span> <button id="spikegear" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Immunity gear</span> <button id="immunity" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Boost hat</span> <button id="boost" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Apple hat</span> <button id="applehat" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Scuba gear</span> <button id="scuba" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Hood</span> <button id="hood" class="section-option-hotkeyInput"></button> </div> <div class="section-option"> <span class="section-option-title">Demolist</span> <button id="demolist" class="section-option-hotkeyInput"></button> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Combat</h1> <p>Modify combat settings, change pvp behavior</p> <div class="section opened"> <div class="section-title"> <h2>Healing</h2> </div> <div class="section-content"> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Autoheal</span> <label class="switch-checkbox"> <input id="autoheal" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Healing delay</span> <label class="slider"> <input id="autohealDelay" min="0" max="500" type="range"> <span class="slider-value">500</span> </label> </div> </div> </div> </div> <div class="section opened"> <div class="section-title"> <h2>Hats</h2> </div> <div class="section-content"> <div class="split-section"> <div class="section-option"> <span class="section-option-title">Jungle On Clown</span> <label class="switch-checkbox"> <input id="jungleOnClown" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title"> Equip last hat <span class="tooltip"> * <span class="tooltip-text">On spawn, the last hat you had will be equipped</span> </span> </span> <label class="switch-checkbox"> <input id="lastHat" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Auto scuba</span> <label class="switch-checkbox"> <input id="autoScuba" type="checkbox"> <span></span> </label> </div> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Visuals</h1> <p>Customize your visuals, or you can disable it for performance</p> <div class="section"> <div class="section-title"> <h2>Tracers</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Enemy Tracers</span> <label class="switch-checkbox"> <input id="enemyTracers" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Arrows</span> <label class="switch-checkbox"> <input id="arrows" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Teammate Tracers</span> <label class="switch-checkbox"> <input id="teammateTracers" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Rainbow colors</span> <label class="switch-checkbox"> <input id="rainbow" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Animal Tracers</span> <label class="switch-checkbox"> <input id="animalTracers" type="checkbox"> <span></span> </label> </div> </div> </div> <div class="section"> <div class="section-title"> <h2>Player</h2> <svg class="icon" version="1.0" xmlns="http://www.w3.org/2000/svg" width="64.000000pt" height="64.000000pt" viewBox="0 0 64.000000 64.000000" preserveAspectRatio="xMidYMid meet"> <g transform="translate(0.000000,64.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M160 575 l-54 -55 99 -100 100 -100 -100 -100 -100 -100 58 -57 57 -58 157 158 158 157 -155 155 c-85 85 -157 155 -160 155 -3 0 -30 -25 -60 -55z"/> </g> </svg> </div> <div class="section-content"> <div class="section-option"> <span class="section-option-title">Show invisible players</span> <label class="switch-checkbox"> <input id="showHoods" type="checkbox"> <span></span> </label> </div> <div class="section-option"> <span class="section-option-title">Draw HP value</span> <label class="switch-checkbox"> <input id="drawHP" type="checkbox"> <span></span> </label> </div> </div> </div> </div>\n                        <div class="menu-page"> <h1>Misc</h1> </div>\n                        <div class="menu-page"> <h1>Appearance</h1> </div>\n                        <div class="menu-page"> <h1>Other</h1> </div>\n                        <div class="menu-page"> <h1>Credits</h1> </div>\n                    </div>\n                </main>\n            </div>\n        </div>\n    '],{type:"text/html; charset=utf-8"});t.src=URL.createObjectURL(e),t.id="iframe-page-container",document.body.appendChild(t);const n=document.createElement("style");n.innerHTML="\n        #iframe-page-container {\n            position: absolute;\n            top: 0;\n            left: 0;\n            bottom: 0;\n            right: 0;\n            width: 100%;\n            height: 100%;\n            margin: 0;\n            padding: 0;\n            z-index: 99;\n            border: none;\n            outline: none;\n            overflow: scroll;\n            display: none;\n        }\n\n        .iframe-opened {\n            display: block!important;\n        }\n    ",document.head.appendChild(n),t.onload=()=>{const e=t.contentWindow,n=e.document;URL.revokeObjectURL(t.src);const o=n.getElementById("menu-container"),i=n.querySelectorAll(".open-menu"),a=n.querySelectorAll(".menu-page"),d=n.querySelectorAll(".section"),u=n.querySelectorAll(".section-option-hotkeyInput"),h=n.querySelector("#close-menu"),m=n.querySelectorAll("input[type='checkbox'][id]"),w=n.querySelectorAll("input[type='range'][id]");n.querySelector("#version > span").textContent="v"+O.version;for(const t of w){const e=t.nextElementSibling;t.value=c[t.id],e&&(e.textContent=t.value),t.oninput=()=>{const n=Number(t.value)%5;t.value-=n,e&&(e.textContent=t.value),c[t.id]=Number(t.value),s.set("Dsync-settings",c)}}for(const t of m)t.checked=c[t.id],t.onchange=()=>{c[t.id]=t.checked,s.set("Dsync-settings",c)};O.toggleMenu=()=>{o.classList.toggle("close"),o.classList.toggle("open"),setTimeout((()=>{t.classList.toggle("iframe-opened")}),100)},h.onclick=O.toggleMenu,e.addEventListener("keydown",(t=>S(t,t.code))),e.addEventListener("keyup",(t=>D(t,t.code))),L(o),window.addEventListener("resize",(()=>L(o))),setTimeout((()=>t.classList.add("iframe-opened")),0),e.addEventListener("contextmenu",(t=>t.preventDefault()));for(let t=0;t<i.length;t++)i[t].onclick=()=>{p(i,"active"),i[t].classList.add("active"),p(a,"opened"),a[t].classList.add("opened")};for(const t of d){const e=t.children[0],n=t.children[1];e&&n&&(r(t,"opened")?n.classList.add("opened"):(n.style.display="none",e.onclick=()=>{n.classList.contains("opened")?setTimeout((()=>{n.style.display="none"}),100):n.style.display="grid",setTimeout((()=>{n.classList.toggle("opened"),e.children[1].classList.toggle("rotate")}),0)}))}for(const t of u)try{t.textContent=l(c[t.id])}catch(e){throw new Error(t.id+" doesn't exist in settings")}O.active=null;const g=t=>{if(!O.active)return;const e="Backspace"===t?"...":l(t);c[O.active.id]="Backspace"===t?"...":t,O.active.textContent=e,s.set("Dsync-settings",c),O.active=null};o.addEventListener("keyup",(t=>{t.keyCode<5||!O.active||g(t.code)})),o.addEventListener("mouseup",(t=>{const e=t.target;if(O.active)return g(t.button);r(e,"section-option-hotkeyInput")&&(e.textContent="Wait...",O.active=e)})),e.addEventListener("mouseup",(t=>[3,4].includes(t.button)&&t.preventDefault())),window.addEventListener("mouseup",(t=>[3,4].includes(t.button)&&t.preventDefault()))}};const C=[{radix:2,prefix:"0b0*"},{radix:8,prefix:"0+"},{radix:10,prefix:""},{radix:16,prefix:"0x0*"}];var P;!function(t){t[t.APPEND=0]="APPEND",t[t.PREPEND=1]="PREPEND"}(P||(P={}));var M,N=class{constructor(t,e){this.code=t,this.COPY_CODE=t,this.unicode=e||!1,this.hooks={}}static parseValue(t){try{return Function(`return (${t})`)()}catch(t){return null}}isRegexp(t){return"regexp"===(t=>Object.prototype.toString.call(t).slice(8,-1).toLowerCase())(t)}generateNumberSystem(t){return`(?:${[...C].map((({prefix:e,radix:n})=>e+t.toString(n))).join("|")})`}parseVariables(t){return t=(t=(t=(t=t.replace(/\{VAR\}/g,"(?:let|var|const)")).replace(/\{QUOTE\}/g,"['\"`]")).replace(/ARGS\{(\d+)\}/g,((...t)=>{let e=Number(t[1]),n=[];for(;e--;)n.push("\\w+");return n.join("\\s*,\\s*")}))).replace(/NUMBER\{(\d+)\}/g,((...t)=>{const e=Number(t[1]);return this.generateNumberSystem(e)}))}format(t,e,n){let o=null;Array.isArray(e)?o=e.map((t=>this.isRegexp(t)?t.source:t)).join("\\s*"):this.isRegexp(e)&&(o=e.source),o=this.parseVariables(o),this.unicode&&(o=o.replace(/\\w/g,"(?:[^\\x00-\\x7F-]|\\$|\\w)"));const s=new RegExp(o.replace(/\{INSERT\}/,""),n);if(null===this.code.match(s))throw new Error("Failed to find: "+t);return o.includes("{INSERT}")?new RegExp(o,n):s}template(t,e,n,o){const s=new RegExp(`(${this.format(e,n).source})`);this.code=this.code.replace(s,t===P.APPEND?"$1"+o:o+"$1")}match(t,e,n,o=!1){const s=this.format(t,e,n),i=this.code.match(s);return this.hooks[t]={expression:s,match:i},o&&$(t,this.hooks[t]),i}matchAll(t,e,n,o=!1){const s=this.format(t,e,n),i=this.code.matchAll(s);return this.hooks[t]={expression:s,match:[...i]},o&&$(t,this.hooks[t]),i}replace(t,e,n,o){const s=this.format(t,e,o);this.code=this.code.replace(s,n)}append(t,e,n){this.template(P.APPEND,t,e,n)}prepend(t,e,n){this.template(P.PREPEND,t,e,n)}insert(t,e,n){const{source:o}=this.format(t,e);if(!o.includes("{INSERT}"))throw new Error("Your regexp must contain {INSERT} keyword");const s=new RegExp(o.replace(/^(.*)\{INSERT\}(.*)$/,"($1)($2)"));this.code=this.code.replace(s,`$1${n}$2`)}};!function(t){t[t.DIED=19]="DIED",t[t.SPAWN=35]="SPAWN"}(M||(M={}));const $=console.log;window.log=$,window.Dsync={props:{},hooks:{},settings:c,myPlayer:null,hsl:0,version:"1.0.0"};const O=window.Dsync;window.eval=new Proxy(window.eval,{apply(t,e,n){const o=n[0];if(o.length>1e5){const s=new N(o,!0);window.COPY_CODE=s.COPY_CODE.match(/^\((.+)\)\(.+\);$/)[1],s.append("EXTERNAL fix",[/\(function/,/(\w+)/,/\(/,/\w+/,/\)/,/\{/],"EXTERNAL.__proto__.toString=()=>window.COPY_CODE;"),s.replace("Debugger fix",[/debugger/],"","g");const i=s.match("selectItem",[/!/,/\w+/,/\[/,/\w+/,/\]/,/&&/,/(\w+)/,/\(/,/\d/,/\)/,/,/])[1];s.prepend("selectItem",["function",`${i}`],`window.Dsync.selectItem=${i};`);const a=s.match("equipHat",[/!/,/\w+/,/\)/,/return/,/;/,/(\w+)/,/\(/,/\w+/,/\)/])[1];s.prepend("equipHat",["function",`${a}`],`window.Dsync.equipHat=${a};`);const c=s.match("chat",[/break/,/\}/,/(\w+)/,/\(/,/\w+/,/\)/])[1];s.prepend("chat",["function",`${c}`],`window.Dsync.chat=${c};`);const[,p,l]=s.match("attack",[/&&/,/(\w+)/,/\(/,/(\w+)/,/\(/,/\)/,/\)/,/,/]);s.prepend("attack",["function",`${p}`],`window.Dsync.attack=${p};`),s.prepend("getAngle",["function",`${l}`],`window.Dsync.getAngle=${l};`);const r=s.match("stopAttack",[/&&/,/(\w+)/,/\(/,/\)/,/,/])[1];s.prepend("stopAttack",["function",`${r}`],`window.Dsync.stopAttack=${r};`);const d=s.match("autoattack",[/,/,/(\w+)/,/\(/,/\w+/,/\)/,/\)/,/\)/])[1];s.prepend("autoattack",["function",`${d}`],`window.Dsync.autoattack=${d};`);const u=s.match("move",[/&&/,/\(/,/(\w+)/,/\(/,/\w+/,/\)/])[1];s.prepend("move",["function",`${u}`],`window.Dsync.move=${u};`);const h=s.match("createClan",[/,/,/\w+/,/=>/,/\{/,/(\w+)/,/\(/,/\w+/])[1];s.prepend("createClan",["function",`${h}`],`window.Dsync.createClan=${h};`);const m=s.match("leaveClan",[/=>/,/\{/,/(\w+)/,/\(/,/\)/,/\}/])[1];s.prepend("leaveClan",["function",`${m}`],`window.Dsync.leaveClan=${m};`);const w=s.match("kickUser",[/return/,/;/,/(\w+)/,/\(/,/\w+/,/\)/,/\}/,/:/])[1];s.prepend("kickUser",["function",`${w}`],`window.Dsync.kickUser=${w};`);const g=s.match("joinClan",[/(\w+)/,/\(/,/\w+/,/\)/,/\}/,/\}/,/\)/,/\}/,/\}/])[1];s.prepend("joinClan",["function",`${g}`],`window.Dsync.joinClan=${g};`),s.append("mousedown",[/&&/,/\w+/,/\>/,/\w+/,/\)/,/return/,/;/,"(.+?=",/(\w+)/,".+?),","!(\\w+",/\(/,/\w+/,/,/,/\w+/,"\\)).+?",/\}/],"window.Dsync.mousedown=($3)=>{$2;return $4;};"),s.append("mouseup",[/!\w+\.\w+/,/\)/,/return/,/;/,"(\\w+",/=/,/(\w+).+?\w+/,/\(/,/\w+/,/,/,/\w+/,"\\))",/\}/],"window.Dsync.mouseup=($3)=>{$2};");const[,v,b]=s.match("lockRotation",[/\[/,/\w+/,/\]/,/&&/,/(\w+)/,/\(/,/!(\w+)/,/\)/,/,/]);s.prepend("lockRotation",["function",`${v}`],`window.Dsync.toggleRotation=()=>{${b}=!${b};};`);const y=s.match("toggleChat",[/return/,"(\\w+",/&&/,/\w+/,/\(/,/!\[/,/\]/,/\)/,",.+?),\\w+\\."])[1];s.insert("toggleChat",[/null/,/\}/,/\)/,/\)/,/;/,/{INSERT}/,/{VAR}/,/\w+/,/=/],`window.Dsync.toggleChat=()=>{${y}};`);const[,f,x,k]=s.match("whichWeapon",["((\\w+)",/\(/,/(\w+\.\w+)/,"\\[)",/Number/,/\(.+?\).+?\]/,/\)/]);s.prepend("selectByIndex",["function",`${x}`],`window.Dsync.selectByIndex=(id)=>{${f}id]);};window.Dsync.itemBar=()=>${k};`);const[,E,I]=s.match("entityData",/(\w+)\(\)\[\w+\.\w+\]\.(\w+)/);s.prepend("entityData",[/function/,/\w+/,/\(/,/ARGS{2}/,/\)/,/\{/,/{VAR}/,/\w+/,/,/],`window.Dsync.entityData=${E}();`),O.props.radius=I,s.append("drawEntityInfo",[/function/,/\w+/,/\(/,/ARGS{3}/,/\)/,/\{/,/{VAR}/,/(\w+)/,/=/,/\w+/,/\[/,/\w+/,/\(/,/\).+?\.5;/],"window.Dsync.hooks.drawEntityInfo(...arguments, $2);");const[,A,R,S]=s.match("positionX",[/\(\w+\.(\w+)/,/=/,/\w+\.(\w+)/,/\+/,/\(\w+\.(\w+)/]);O.props.x=A,O.props.x1=R,O.props.x2=S;const[,D,L,T]=s.match("positionX",[/,\w+\.(\w+)/,/=/,/\w+\.(\w+)/,/\+/,/\(\w+\.(\w+)/]);O.props.y=D,O.props.y1=L,O.props.y2=T;const C=s.match("health",[/(\w+)/,/\//,/NUMBER{255}/,/\*/])[1];O.props.health=C;const P=s.match("maxHealth",[/\w+/,/:/,/NUMBER{35}/,/,/,/(\w+)/,/:/,/NUMBER{100}/])[1];O.props.maxHealth=P;const M=s.match("id",[/-NUMBER{1}/,/!==/,/\w+\.(\w+)/,/&&/])[1];O.props.id=M,s.prepend("myPlayerID",[/function/,/\w+/,/\(/,/\)/,/\{/,/return/,/\w+/,/!==/,/(\w+)/],"window.Dsync.myPlayerID=()=>$2;");const $=s.match("hat",[/\w+/,/\(/,/\)/,/\[/,/\w+/,/\./,/(\w+)/,/\]/,/;/,/if/])[1];O.props.hat=$;const B=s.match("playerValue",[/if/,/\(/,/!/,/\(/,/\w+/,/\./,/(\w+)/,/&/,/\w+/,/\(/,/\)/])[1];return O.props.playerValue=B,s.insert("showHoods1",[/\w+/,/\(/,/\)/,/\./,/\w+/,/{INSERT}/,/\)/,/continue/,/;/],"&&!window.Dsync.settings.showHoods"),s.insert("showHoods2",[/\w+\.\w+/,/===/,/\w+/,/{INSERT}/,/\)/,/\{/],"||window.Dsync.settings.showHoods"),s.insert("websocketString",[/;/,/{INSERT}/,/switch/,/\(/,/(\w+)/,/\[/,/NUMBER{0}/,/\]/,/\)/,/\{/],"window.Dsync.hooks.stringMessage($3);"),n[0]=s.code,window.eval=t,t.apply(e,n),void H()}return t.apply(e,n)}});const H=()=>{const n=document.querySelector("#game-canvas"),o=document.querySelector("#grid-toggle"),s=document.querySelector("#display-ping-toggle");o.click(),s.click(),T(),window.onkeydown=null,window.onkeyup=null,n.onmousedown=null,n.onmouseup=null,window.addEventListener("keydown",(t=>S(t,t.code))),window.addEventListener("keyup",(t=>D(t,t.code))),n.addEventListener("mousedown",(t=>S(t,t.button))),n.addEventListener("mouseup",(t=>D(t,t.button)));let i=!1,a=!1,p=!1,l=Date.now();O.hooks.drawEntityInfo=(n,o,s,r)=>{const d=u(n),m=O.myPlayerID();if(m===d.id){const o=Date.now();f.length&&o-l>2e3&&(l=o,(t=>{O.equipHat(t),O.equipHat(t)})(f.shift())),O.myPlayer=Object.assign(Object.assign({},O.myPlayer),d),O.myPlayer.hat=n[O.props.hat],O.myPlayer.isClown=128===d.playerValue,c.rainbow&&(O.hsl=(O.hsl+.5)%360);const{y:s,health:r,maxHealth:u,isClown:h,hat:m,oldHat:w}=O.myPlayer,g=s>8e3&&s<9e3;c.autoScuba&&g&&!p&&(p=!0,O.myPlayer.oldHat=m,x(e.SCUBA)),p&&!g&&(x(w),p=!1),c.autoheal&&r<u-10&&!h&&!i&&(i=!0,setTimeout((()=>{I(t.HEAL),i=!1}),c.autohealDelay)),c.jungleOnClown&&h&&m!==e.JUNGLE&&!a&&(a=!0,O.myPlayer.oldHat=m,x(e.JUNGLE)),!h&&a&&(x(w),a=!1)}null!==O.myPlayer&&(((t,e)=>{if(!c.drawHP)return;const{x:n,y:o,health:s,maxHealth:i,radius:a}=e;t.save(),t.fillStyle="#fff",t.strokeStyle="#303030",t.lineWidth=8,t.lineJoin="round",t.font="bold 15px Montserrat";const p=`HP ${s}/${i}`,l=[p,n-t.measureText(p).width/2,o+a+(parseInt(t.font.match(/\d+/)[0])||1)+55];t.strokeText(...l),t.fillText(...l),t.restore()})(o,d),m!==d.id&&(c.enemyTracers&&0===d.type&&!s||c.teammateTracers&&0===d.type&&s||c.animalTracers&&0!==d.type)&&h(o,d,s))},O.hooks.stringMessage=t=>{const[e,...n]=t,{hat:o}=O.myPlayer||{};e===M.SPAWN&&c.lastHat&&o&&x(o,!0),e===M.DIED&&(m=0,w=!1,g=!1,v=!1,c.autospawn&&(()=>{const t=document.querySelector("#play");t&&t.click()})())}}}();